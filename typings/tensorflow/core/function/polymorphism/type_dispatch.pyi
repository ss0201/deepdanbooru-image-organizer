"""
This type stub file was generated by pyright.
"""

from typing import Iterable, Optional
from tensorflow.python.types import trace

"""Polymorphic Type Dispatch."""
_MAX_DISPATCH_CACHE = ...
class TypeDispatchTable:
  """Type dispatch table implementation.

  A type dispatch table is a list, L, of target types. Given a request type, R,
  the table selects a target type, T, according to the following dispatch rules:
    1. R == T or R is subtype of T
    2. There does not exist O in L such that R is subtype of O and O is a
       subtype of T (in other words, T is the closest to R, within list L).
    3. If the above two rules are satisfied by multiple targets, the earliest
       inserted one is chosen.
  """
  def __init__(self) -> None:
    """Creates a TypeDispatchTable object."""
    ...
  
  def add_target(self, target: trace.TraceType) -> None:
    """Adds a new target type."""
    ...
  
  @property
  def targets(self) -> Iterable[trace.TraceType]:
    """Returns an iterable to all targets in the table."""
    ...
  
  def delete(self, target: trace.TraceType) -> None:
    """Deletes a target in the table if it exists."""
    ...
  
  def clear(self) -> None:
    """Deletes all targets in the table."""
    ...
  
  def dispatch(self, request: trace.TraceType) -> Optional[trace.TraceType]:
    """Returns the deepest subtype target if it exists in the table."""
    ...
  
  def try_generalizing_trace_type(self, target: trace.TraceType) -> trace.TraceType:
    """Returns a generalized subtype of the one given.

    This heuristic aims to reduce the number of future traces by computing a
    type that represents more general function inputs.

    The original "experimental_relax_shapes" heuristic identified a known type
    which shared a common supertype with the current unknown type and then
    traced with that common supertype. However, the notion of "common supertype"
    was only limited to shapes. This heuristic extends that to TraceType.

    Returns `target` if a common supertype can not be found.

    Args:
      target: The TraceType to generalize
    """
    ...
  


