"""
This type stub file was generated by pyright.
"""

"""Operators corresponding to Python builtin functions.

List of built-in functions: https://docs.python.org/3/library/functions.html
"""
input_lib = ...
parallel_ops = ...
UNSPECIFIED = ...
def overload_of(f):
  ...

def locals_in_original_context(caller_fn_scope): # -> dict[str, Any]:
  """Executes the locals function in the context of a specified function."""
  ...

def globals_in_original_context(caller_fn_scope): # -> dict[str, Any]:
  """Executes the locals function in the context of a specified function."""
  ...

def eval_in_original_context(f, args, caller_fn_scope):
  """Executes the eval function in the context of a specified function."""
  ...

def super_in_original_context(f, args, caller_fn_scope):
  """Executes the super function in the context of a specified function.

  See https://docs.python.org/3/library/functions.html#super for the exact
  details

  Args:
    f: Callable, typically the super builtin
    args: List[Any], the original call arguments
    caller_fn_scope: Optional[function_wrappers.FunctionScope], the function
      scope of the converted function in which this call was originally made

  Returns:
    The result of calling `f` as if it was called in the frame indicated by
      `caller_fn_scope`.
  """
  ...

def abs_(x): # -> MapDataset | ParallelMapDataset:
  ...

def float_(x=...): # -> SparseTensor | IndexedSlices | Tensor | Any | float:
  ...

def int_(x=..., base=...): # -> SparseTensor | IndexedSlices | Tensor | Any | int:
  ...

def len_(s): # -> Any | list[Unknown] | _basetuple | defaultdict[Unknown, Unknown] | ObjectProxy | int:
  ...

def print_(*objects, **kwargs): # -> defaultdict[Unknown, Unknown] | Any | list[Unknown] | ObjectProxy | None:
  """Overload of the print builtin."""
  ...

def min_(*args, **kwargs):
  ...

def max_(*args, **kwargs):
  ...

def range_(start_or_stop, stop=..., step=...): # -> range:
  ...

def enumerate_(s, start=...): # -> ZipDataset | DatasetV1Adapter | enumerate[Unknown]:
  ...

def zip_(*iterables): # -> ZipDataset | zip[tuple[Unknown]]:
  ...

def map_(fn, *iterables): # -> MapDataset | ParallelMapDataset | map[Unknown]:
  ...

def next_(iterator, default=...): # -> Any | list[Unknown] | _basetuple | defaultdict[Unknown, Unknown] | ObjectProxy | object:
  ...

def next_tf_iterator(iterator, default=...): # -> Any | list[Unknown] | _basetuple | defaultdict[Unknown, Unknown] | ObjectProxy:
  ...

def next_py(iterator, default=...): # -> object:
  ...

def filter_(function, iterable): # -> FilterDataset | filter[Unknown]:
  ...

def any_(iterable): # -> defaultdict[Unknown, Unknown] | Any | list[Unknown] | ObjectProxy | bool:
  ...

def all_(iterable): # -> defaultdict[Unknown, Unknown] | Any | list[Unknown] | ObjectProxy | bool:
  ...

def sorted_(iterable, key=..., reverse=...): # -> list[Unknown]:
  ...

SUPPORTED_BUILTINS = ...
BUILTIN_FUNCTIONS_MAP = ...
