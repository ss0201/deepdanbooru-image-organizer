"""
This type stub file was generated by pyright.
"""

import ctypes
import importlib
import sys
import traceback
from tensorflow.python import data, distribute, pywrap_tensorflow as _pywrap_tensorflow, tf2 as _tf2
from tensorflow.python.eager import context, monitoring as _monitoring
from tensorflow.python.feature_column import feature_column_lib as feature_column
from tensorflow.python.module import module
from tensorflow.python.ops import bincount_ops, bitwise_ops as bitwise, composite_tensor_ops, cond_v2, gen_audio_ops, gen_boosted_trees_ops, gen_cudnn_rnn_ops, gen_debug_ops, gen_rnn_ops, gen_sendrecv_ops, gen_tpu_ops, gradient_checker_v2, image_ops as image, manip_ops as manip, metrics, nn, numpy_ops, ragged, rnn, rnn_cell, sets, stateful_random_ops, while_v2
from tensorflow.python.ops.distributions import distributions
from tensorflow.python.ops.linalg import linalg
from tensorflow.python.ops.linalg.sparse import sparse
from tensorflow.python.ops.losses import losses
from tensorflow.python.ops.ragged import ragged_ops as _ragged_ops
from tensorflow.python.ops.signal import signal
from tensorflow.python.ops.structured import structured_ops as _structured_ops
from tensorflow.python.profiler import profiler, profiler_client, profiler_v2, trace
from tensorflow.python.saved_model import saved_model
from tensorflow.python.summary import summary
from tensorflow.python.tpu import api
from tensorflow.python.user_ops import user_ops
from tensorflow.python.util import compat, dispatch
from tensorflow.python.training import quantize_training as _quantize_training, training as train
from tensorflow.python.lib.io import python_io
from tensorflow.python.platform import app, flags, gfile, resource_loader, sysconfig as sysconfig_lib, test, tf_logging as logging
from tensorflow.python.compat import v2_compat
from tensorflow.python.util.all_util import make_all
from tensorflow.python.util.tf_export import tf_export
from tensorflow.python.eager.context import executing_eagerly
from tensorflow.python.eager.remote import connect_to_remote_host
from tensorflow.python.eager.def_function import function
from tensorflow.python.framework.ops import enable_eager_execution
from tensorflow.python.debug.lib import check_numerics_callback, dumping_callback
from tensorflow.python.dlpack.dlpack import from_dlpack, to_dlpack
from tensorflow.python.compiler.xla import jit, xla
from tensorflow.python.compiler.mlir import mlir
from tensorflow.python.framework import extension_type as _extension_type

"""Import core names of TensorFlow.

Programs that want to build TensorFlow Ops and Graphs without having to import
the constructors and utilities individually can import this file:


import tensorflow as tf
"""
_tf2_gauge = ...
_exported_dunders = ...
__all__ = [s for s in dir() if s in _exported_dunders or nots.startswith('_')]
