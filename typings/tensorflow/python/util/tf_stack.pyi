"""
This type stub file was generated by pyright.
"""

"""Functions used to extract and analyze stacks.  Faster than Python libs."""
_get_thread_key = ...
_source_mapper_stacks = ...
_source_filter_stacks = ...
class StackTraceTransform:
  """Base class for stack trace transformation functions."""
  _stack_dict = ...
  _thread_key = ...
  def __enter__(self): # -> Self@StackTraceTransform:
    ...
  
  def __exit__(self, unused_type, unused_value, unused_traceback): # -> None:
    ...
  
  def update(self):
    ...
  


class StackTraceMapper(StackTraceTransform):
  """Allows remapping traceback information to different source code."""
  _stack_dict = ...
  def __init__(self) -> None:
    ...
  
  def update(self): # -> None:
    ...
  
  def get_effective_source_map(self):
    """Returns a map (filename, lineno) -> (filename, lineno, function_name)."""
    ...
  


EMPTY_DICT = ...
class SentinelMapper(StackTraceMapper):
  def get_effective_source_map(self): # -> dict[Unknown, Unknown]:
    ...
  


class StackTraceFilter(StackTraceTransform):
  """Allows filtering traceback information by removing superfluous frames."""
  _stack_dict = ...
  def __init__(self) -> None:
    ...
  
  def update(self): # -> None:
    ...
  
  def get_filtered_filenames(self):
    ...
  


EMPTY_SET = ...
class SentinelFilter(StackTraceFilter):
  def get_filtered_filenames(self): # -> frozenset[Unknown]:
    ...
  


class CurrentModuleFilter(StackTraceFilter):
  """Filters stack frames from the module where this is used (best effort)."""
  def __init__(self) -> None:
    ...
  
  def get_filtered_filenames(self): # -> frozenset[str | None]:
    ...
  


def extract_stack():
  """An eager-friendly alternative to traceback.extract_stack.

  Returns:
    A list-like FrameSummary containing StackFrame-like objects, which are
    namedtuple-like objects with the following fields: filename, lineno, name,
    line, meant to masquerade as traceback.FrameSummary objects.
  """
  ...

def extract_stack_for_op(c_op, stacklevel=...): # -> None:
  """Attaches the current stack trace to `c_op`.

  Args:
    c_op: a TF_Operation object.
    stacklevel: An integer for ignoring Python wrapper stack frames.
      The default value of 1 ignores this function from the frame.
  """
  ...

StackSummary = ...
FrameSummary = ...
