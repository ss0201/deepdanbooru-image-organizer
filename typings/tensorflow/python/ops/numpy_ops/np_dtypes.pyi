"""
This type stub file was generated by pyright.
"""

import numpy as np
from tensorflow.python.ops.numpy_ops import np_export

"""Dtypes and dtype utilities."""
bool_ = ...
complex_ = np_export.np_export_constant(__name__, 'complex_', np.complex_)
complex128 = np_export.np_export_constant(__name__, 'complex128', np.complex128)
complex64 = np_export.np_export_constant(__name__, 'complex64', np.complex64)
float_ = np_export.np_export_constant(__name__, 'float_', np.float_)
float16 = np_export.np_export_constant(__name__, 'float16', np.float16)
float32 = np_export.np_export_constant(__name__, 'float32', np.float32)
float64 = np_export.np_export_constant(__name__, 'float64', np.float64)
inexact = ...
int_ = np_export.np_export_constant(__name__, 'int_', np.int_)
int16 = np_export.np_export_constant(__name__, 'int16', np.int16)
int32 = np_export.np_export_constant(__name__, 'int32', np.int32)
int64 = np_export.np_export_constant(__name__, 'int64', np.int64)
int8 = np_export.np_export_constant(__name__, 'int8', np.int8)
object_ = ...
string_ = np_export.np_export_constant(__name__, 'string_', np.string_)
uint16 = np_export.np_export_constant(__name__, 'uint16', np.uint16)
uint32 = np_export.np_export_constant(__name__, 'uint32', np.uint32)
uint64 = np_export.np_export_constant(__name__, 'uint64', np.uint64)
uint8 = np_export.np_export_constant(__name__, 'uint8', np.uint8)
unicode_ = np_export.np_export_constant(__name__, 'unicode_', np.unicode_)
iinfo = ...
issubdtype = ...
_to_float32 = ...
_cached_np_dtypes = ...
_prefer_float32 = ...
_allow_float64 = ...
def is_prefer_float32(): # -> Literal[False]:
  ...

def set_prefer_float32(b): # -> None:
  ...

def is_allow_float64(): # -> Literal[True]:
  ...

def set_allow_float64(b): # -> None:
  ...

def canonicalize_dtype(dtype):
  ...

def default_float_type(): # -> float64 | float32:
  """Gets the default float type.

  Returns:
    If `is_prefer_float32()` is false and `is_allow_float64()` is true, returns
    float64; otherwise returns float32.
  """
  ...

