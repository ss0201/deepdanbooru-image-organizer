"""
This type stub file was generated by pyright.
"""

"""Python wrappers around TensorFlow ops.

This file is MACHINE GENERATED! Do not edit.
Original C++ source file: special_math_ops.cc
"""
def bessel_i0(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselI0 = ...
def bessel_i0_eager_fallback(x, name, ctx):
  ...

def bessel_i0e(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselI0e = ...
def bessel_i0e_eager_fallback(x, name, ctx):
  ...

def bessel_i1(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselI1 = ...
def bessel_i1_eager_fallback(x, name, ctx):
  ...

def bessel_i1e(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselI1e = ...
def bessel_i1e_eager_fallback(x, name, ctx):
  ...

def bessel_j0(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselJ0 = ...
def bessel_j0_eager_fallback(x, name, ctx):
  ...

def bessel_j1(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselJ1 = ...
def bessel_j1_eager_fallback(x, name, ctx):
  ...

def bessel_k0(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselK0 = ...
def bessel_k0_eager_fallback(x, name, ctx):
  ...

def bessel_k0e(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselK0e = ...
def bessel_k0e_eager_fallback(x, name, ctx):
  ...

def bessel_k1(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselK1 = ...
def bessel_k1_eager_fallback(x, name, ctx):
  ...

def bessel_k1e(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselK1e = ...
def bessel_k1e_eager_fallback(x, name, ctx):
  ...

def bessel_y0(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselY0 = ...
def bessel_y0_eager_fallback(x, name, ctx):
  ...

def bessel_y1(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

BesselY1 = ...
def bessel_y1_eager_fallback(x, name, ctx):
  ...

def dawsn(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

Dawsn = ...
def dawsn_eager_fallback(x, name, ctx):
  ...

def expint(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

Expint = ...
def expint_eager_fallback(x, name, ctx):
  ...

def fresnel_cos(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

FresnelCos = ...
def fresnel_cos_eager_fallback(x, name, ctx):
  ...

def fresnel_sin(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

FresnelSin = ...
def fresnel_sin_eager_fallback(x, name, ctx):
  ...

def spence(x, name=...):
  r"""TODO: add doc.

  Args:
    x: A `Tensor`. Must be one of the following types: `bfloat16`, `half`, `float32`, `float64`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor`. Has the same type as `x`.
  """
  ...

Spence = ...
def spence_eager_fallback(x, name, ctx):
  ...

