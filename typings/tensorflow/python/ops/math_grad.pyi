"""
This type stub file was generated by pyright.
"""

"""Gradients for operators defined in math_ops.py."""
def SmartBroadcastGradientArgs(x, y, grad): # -> tuple[tuple[Unknown, Unknown, Literal[True]], tuple[Unknown, Unknown, Literal[True]]] | tuple[tuple[tuple[Unknown, ...], Unknown, bool], tuple[tuple[Unknown, ...], Unknown, bool]] | tuple[tuple[tuple[Unknown, ...], tuple[Unknown, ...], bool], tuple[tuple[Unknown, ...], tuple[Unknown, ...], bool]]:
  """Optimized version of `broadcast_gradient_args` that caches results.

  This implementation avoids creating `broadcast_gradient_args` ops in the case
  that the input shapes are fully defined, and provides hints to the calling
  code that can be used to avoid creating reduction and reshaping ops.

  Args:
    x: The left input tensor to a broadcasting binary op.
    y: The right input tensor to a broadcasting binary op.
    grad: The incoming gradient tensor for a broadcasting binary op.

  Returns:
    A pair of tuples, containing:
      * A 3-tuple of broadcast information for x, containing:
        * The shape of x (as a tuple or Tensor).
        * The reduction indices for x (as a tuple or Tensor).
        * A boolean, which if True, indicates that x's shape differs from grad's
          shape (and so x's gradient must be reduced and/or reshaped).
      * A 3-tuple of broadcast information for y, containing the respective
        details for y.
  """
  ...

_empty_tuple = ...
