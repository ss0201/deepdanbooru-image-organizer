"""
This type stub file was generated by pyright.
"""

np = ...
class TensorType:
    FLOAT32 = ...
    FLOAT16 = ...
    INT32 = ...
    UINT8 = ...
    INT64 = ...
    STRING = ...
    BOOL = ...
    INT16 = ...
    COMPLEX64 = ...
    INT8 = ...
    FLOAT64 = ...
    COMPLEX128 = ...
    UINT64 = ...
    RESOURCE = ...
    VARIANT = ...
    UINT32 = ...
    UINT16 = ...


class QuantizationDetails:
    NONE = ...
    CustomQuantization = ...


def QuantizationDetailsCreator(unionType, table): # -> CustomQuantizationT | None:
    ...

class DimensionType:
    DENSE = ...
    SPARSE_CSR = ...


class SparseIndexVector:
    NONE = ...
    Int32Vector = ...
    Uint16Vector = ...
    Uint8Vector = ...


def SparseIndexVectorCreator(unionType, table): # -> Int32VectorT | Uint16VectorT | Uint8VectorT | None:
    ...

class BuiltinOperator:
    ADD = ...
    AVERAGE_POOL_2D = ...
    CONCATENATION = ...
    CONV_2D = ...
    DEPTHWISE_CONV_2D = ...
    DEPTH_TO_SPACE = ...
    DEQUANTIZE = ...
    EMBEDDING_LOOKUP = ...
    FLOOR = ...
    FULLY_CONNECTED = ...
    HASHTABLE_LOOKUP = ...
    L2_NORMALIZATION = ...
    L2_POOL_2D = ...
    LOCAL_RESPONSE_NORMALIZATION = ...
    LOGISTIC = ...
    LSH_PROJECTION = ...
    LSTM = ...
    MAX_POOL_2D = ...
    MUL = ...
    RELU = ...
    RELU_N1_TO_1 = ...
    RELU6 = ...
    RESHAPE = ...
    RESIZE_BILINEAR = ...
    RNN = ...
    SOFTMAX = ...
    SPACE_TO_DEPTH = ...
    SVDF = ...
    TANH = ...
    CONCAT_EMBEDDINGS = ...
    SKIP_GRAM = ...
    CALL = ...
    CUSTOM = ...
    EMBEDDING_LOOKUP_SPARSE = ...
    PAD = ...
    UNIDIRECTIONAL_SEQUENCE_RNN = ...
    GATHER = ...
    BATCH_TO_SPACE_ND = ...
    SPACE_TO_BATCH_ND = ...
    TRANSPOSE = ...
    MEAN = ...
    SUB = ...
    DIV = ...
    SQUEEZE = ...
    UNIDIRECTIONAL_SEQUENCE_LSTM = ...
    STRIDED_SLICE = ...
    BIDIRECTIONAL_SEQUENCE_RNN = ...
    EXP = ...
    TOPK_V2 = ...
    SPLIT = ...
    LOG_SOFTMAX = ...
    DELEGATE = ...
    BIDIRECTIONAL_SEQUENCE_LSTM = ...
    CAST = ...
    PRELU = ...
    MAXIMUM = ...
    ARG_MAX = ...
    MINIMUM = ...
    LESS = ...
    NEG = ...
    PADV2 = ...
    GREATER = ...
    GREATER_EQUAL = ...
    LESS_EQUAL = ...
    SELECT = ...
    SLICE = ...
    SIN = ...
    TRANSPOSE_CONV = ...
    SPARSE_TO_DENSE = ...
    TILE = ...
    EXPAND_DIMS = ...
    EQUAL = ...
    NOT_EQUAL = ...
    LOG = ...
    SUM = ...
    SQRT = ...
    RSQRT = ...
    SHAPE = ...
    POW = ...
    ARG_MIN = ...
    FAKE_QUANT = ...
    REDUCE_PROD = ...
    REDUCE_MAX = ...
    PACK = ...
    LOGICAL_OR = ...
    ONE_HOT = ...
    LOGICAL_AND = ...
    LOGICAL_NOT = ...
    UNPACK = ...
    REDUCE_MIN = ...
    FLOOR_DIV = ...
    REDUCE_ANY = ...
    SQUARE = ...
    ZEROS_LIKE = ...
    FILL = ...
    FLOOR_MOD = ...
    RANGE = ...
    RESIZE_NEAREST_NEIGHBOR = ...
    LEAKY_RELU = ...
    SQUARED_DIFFERENCE = ...
    MIRROR_PAD = ...
    ABS = ...
    SPLIT_V = ...
    UNIQUE = ...
    CEIL = ...
    REVERSE_V2 = ...
    ADD_N = ...
    GATHER_ND = ...
    COS = ...
    WHERE = ...
    RANK = ...
    ELU = ...
    REVERSE_SEQUENCE = ...
    MATRIX_DIAG = ...
    QUANTIZE = ...
    MATRIX_SET_DIAG = ...
    ROUND = ...
    HARD_SWISH = ...
    IF = ...
    WHILE = ...
    NON_MAX_SUPPRESSION_V4 = ...
    NON_MAX_SUPPRESSION_V5 = ...
    SCATTER_ND = ...
    SELECT_V2 = ...
    DENSIFY = ...
    SEGMENT_SUM = ...
    BATCH_MATMUL = ...
    PLACEHOLDER_FOR_GREATER_OP_CODES = ...
    CUMSUM = ...
    CALL_ONCE = ...
    BROADCAST_TO = ...
    RFFT2D = ...
    CONV_3D = ...
    IMAG = ...
    REAL = ...
    COMPLEX_ABS = ...
    HASHTABLE = ...
    HASHTABLE_FIND = ...
    HASHTABLE_IMPORT = ...
    HASHTABLE_SIZE = ...
    REDUCE_ALL = ...
    CONV_3D_TRANSPOSE = ...
    VAR_HANDLE = ...
    READ_VARIABLE = ...
    ASSIGN_VARIABLE = ...
    BROADCAST_ARGS = ...
    RANDOM_STANDARD_NORMAL = ...
    BUCKETIZE = ...
    RANDOM_UNIFORM = ...
    MULTINOMIAL = ...
    GELU = ...
    DYNAMIC_UPDATE_SLICE = ...
    RELU_0_TO_1 = ...
    UNSORTED_SEGMENT_PROD = ...
    UNSORTED_SEGMENT_MAX = ...
    UNSORTED_SEGMENT_SUM = ...
    ATAN2 = ...


class BuiltinOptions:
    NONE = ...
    Conv2DOptions = ...
    DepthwiseConv2DOptions = ...
    ConcatEmbeddingsOptions = ...
    LSHProjectionOptions = ...
    Pool2DOptions = ...
    SVDFOptions = ...
    RNNOptions = ...
    FullyConnectedOptions = ...
    SoftmaxOptions = ...
    ConcatenationOptions = ...
    AddOptions = ...
    L2NormOptions = ...
    LocalResponseNormalizationOptions = ...
    LSTMOptions = ...
    ResizeBilinearOptions = ...
    CallOptions = ...
    ReshapeOptions = ...
    SkipGramOptions = ...
    SpaceToDepthOptions = ...
    EmbeddingLookupSparseOptions = ...
    MulOptions = ...
    PadOptions = ...
    GatherOptions = ...
    BatchToSpaceNDOptions = ...
    SpaceToBatchNDOptions = ...
    TransposeOptions = ...
    ReducerOptions = ...
    SubOptions = ...
    DivOptions = ...
    SqueezeOptions = ...
    SequenceRNNOptions = ...
    StridedSliceOptions = ...
    ExpOptions = ...
    TopKV2Options = ...
    SplitOptions = ...
    LogSoftmaxOptions = ...
    CastOptions = ...
    DequantizeOptions = ...
    MaximumMinimumOptions = ...
    ArgMaxOptions = ...
    LessOptions = ...
    NegOptions = ...
    PadV2Options = ...
    GreaterOptions = ...
    GreaterEqualOptions = ...
    LessEqualOptions = ...
    SelectOptions = ...
    SliceOptions = ...
    TransposeConvOptions = ...
    SparseToDenseOptions = ...
    TileOptions = ...
    ExpandDimsOptions = ...
    EqualOptions = ...
    NotEqualOptions = ...
    ShapeOptions = ...
    PowOptions = ...
    ArgMinOptions = ...
    FakeQuantOptions = ...
    PackOptions = ...
    LogicalOrOptions = ...
    OneHotOptions = ...
    LogicalAndOptions = ...
    LogicalNotOptions = ...
    UnpackOptions = ...
    FloorDivOptions = ...
    SquareOptions = ...
    ZerosLikeOptions = ...
    FillOptions = ...
    BidirectionalSequenceLSTMOptions = ...
    BidirectionalSequenceRNNOptions = ...
    UnidirectionalSequenceLSTMOptions = ...
    FloorModOptions = ...
    RangeOptions = ...
    ResizeNearestNeighborOptions = ...
    LeakyReluOptions = ...
    SquaredDifferenceOptions = ...
    MirrorPadOptions = ...
    AbsOptions = ...
    SplitVOptions = ...
    UniqueOptions = ...
    ReverseV2Options = ...
    AddNOptions = ...
    GatherNdOptions = ...
    CosOptions = ...
    WhereOptions = ...
    RankOptions = ...
    ReverseSequenceOptions = ...
    MatrixDiagOptions = ...
    QuantizeOptions = ...
    MatrixSetDiagOptions = ...
    HardSwishOptions = ...
    IfOptions = ...
    WhileOptions = ...
    DepthToSpaceOptions = ...
    NonMaxSuppressionV4Options = ...
    NonMaxSuppressionV5Options = ...
    ScatterNdOptions = ...
    SelectV2Options = ...
    DensifyOptions = ...
    SegmentSumOptions = ...
    BatchMatMulOptions = ...
    CumsumOptions = ...
    CallOnceOptions = ...
    BroadcastToOptions = ...
    Rfft2dOptions = ...
    Conv3DOptions = ...
    HashtableOptions = ...
    HashtableFindOptions = ...
    HashtableImportOptions = ...
    HashtableSizeOptions = ...
    VarHandleOptions = ...
    ReadVariableOptions = ...
    AssignVariableOptions = ...
    RandomOptions = ...
    BucketizeOptions = ...
    GeluOptions = ...
    DynamicUpdateSliceOptions = ...
    UnsortedSegmentProdOptions = ...
    UnsortedSegmentMaxOptions = ...
    UnsortedSegmentSumOptions = ...
    ATan2Options = ...


def BuiltinOptionsCreator(unionType, table):
    ...

class Padding:
    SAME = ...
    VALID = ...


class ActivationFunctionType:
    NONE = ...
    RELU = ...
    RELU_N1_TO_1 = ...
    RELU6 = ...
    TANH = ...
    SIGN_BIT = ...


class LSHProjectionType:
    UNKNOWN = ...
    SPARSE = ...
    DENSE = ...


class FullyConnectedOptionsWeightsFormat:
    DEFAULT = ...
    SHUFFLED4x16INT8 = ...


class LSTMKernelType:
    FULL = ...
    BASIC = ...


class CombinerType:
    SUM = ...
    MEAN = ...
    SQRTN = ...


class MirrorPadMode:
    REFLECT = ...
    SYMMETRIC = ...


class CustomOptionsFormat:
    FLEXBUFFERS = ...


class CustomQuantization:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CustomQuantization:
        ...
    
    @classmethod
    def GetRootAsCustomQuantization(cls, buf, offset=...): # -> CustomQuantization:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CustomQuantizationBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Custom(self, j): # -> Literal[0]:
        ...
    
    def CustomAsNumpy(self): # -> Literal[0]:
        ...
    
    def CustomLength(self): # -> Any | Literal[0]:
        ...
    
    def CustomIsNone(self):
        ...
    


def CustomQuantizationStart(builder): # -> None:
    ...

def CustomQuantizationAddCustom(builder, custom): # -> None:
    ...

def CustomQuantizationStartCustomVector(builder, numElems):
    ...

def CustomQuantizationEnd(builder):
    ...

class CustomQuantizationT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CustomQuantizationT:
        ...
    
    @classmethod
    def InitFromObj(cls, customQuantization): # -> CustomQuantizationT:
        ...
    
    def Pack(self, builder):
        ...
    


class QuantizationParameters:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> QuantizationParameters:
        ...
    
    @classmethod
    def GetRootAsQuantizationParameters(cls, buf, offset=...): # -> QuantizationParameters:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def QuantizationParametersBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Min(self, j): # -> Literal[0]:
        ...
    
    def MinAsNumpy(self): # -> Literal[0]:
        ...
    
    def MinLength(self): # -> Any | Literal[0]:
        ...
    
    def MinIsNone(self):
        ...
    
    def Max(self, j): # -> Literal[0]:
        ...
    
    def MaxAsNumpy(self): # -> Literal[0]:
        ...
    
    def MaxLength(self): # -> Any | Literal[0]:
        ...
    
    def MaxIsNone(self):
        ...
    
    def Scale(self, j): # -> Literal[0]:
        ...
    
    def ScaleAsNumpy(self): # -> Literal[0]:
        ...
    
    def ScaleLength(self): # -> Any | Literal[0]:
        ...
    
    def ScaleIsNone(self):
        ...
    
    def ZeroPoint(self, j): # -> Literal[0]:
        ...
    
    def ZeroPointAsNumpy(self): # -> Literal[0]:
        ...
    
    def ZeroPointLength(self): # -> Any | Literal[0]:
        ...
    
    def ZeroPointIsNone(self):
        ...
    
    def DetailsType(self): # -> Literal[0]:
        ...
    
    def Details(self): # -> Table | None:
        ...
    
    def QuantizedDimension(self): # -> Literal[0]:
        ...
    


def QuantizationParametersStart(builder): # -> None:
    ...

def QuantizationParametersAddMin(builder, min): # -> None:
    ...

def QuantizationParametersStartMinVector(builder, numElems):
    ...

def QuantizationParametersAddMax(builder, max): # -> None:
    ...

def QuantizationParametersStartMaxVector(builder, numElems):
    ...

def QuantizationParametersAddScale(builder, scale): # -> None:
    ...

def QuantizationParametersStartScaleVector(builder, numElems):
    ...

def QuantizationParametersAddZeroPoint(builder, zeroPoint): # -> None:
    ...

def QuantizationParametersStartZeroPointVector(builder, numElems):
    ...

def QuantizationParametersAddDetailsType(builder, detailsType): # -> None:
    ...

def QuantizationParametersAddDetails(builder, details): # -> None:
    ...

def QuantizationParametersAddQuantizedDimension(builder, quantizedDimension): # -> None:
    ...

def QuantizationParametersEnd(builder):
    ...

class QuantizationParametersT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> QuantizationParametersT:
        ...
    
    @classmethod
    def InitFromObj(cls, quantizationParameters): # -> QuantizationParametersT:
        ...
    
    def Pack(self, builder):
        ...
    


class Int32Vector:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Int32Vector:
        ...
    
    @classmethod
    def GetRootAsInt32Vector(cls, buf, offset=...): # -> Int32Vector:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Int32VectorBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Values(self, j): # -> Literal[0]:
        ...
    
    def ValuesAsNumpy(self): # -> Literal[0]:
        ...
    
    def ValuesLength(self): # -> Any | Literal[0]:
        ...
    
    def ValuesIsNone(self):
        ...
    


def Int32VectorStart(builder): # -> None:
    ...

def Int32VectorAddValues(builder, values): # -> None:
    ...

def Int32VectorStartValuesVector(builder, numElems):
    ...

def Int32VectorEnd(builder):
    ...

class Int32VectorT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Int32VectorT:
        ...
    
    @classmethod
    def InitFromObj(cls, int32Vector): # -> Int32VectorT:
        ...
    
    def Pack(self, builder):
        ...
    


class Uint16Vector:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Uint16Vector:
        ...
    
    @classmethod
    def GetRootAsUint16Vector(cls, buf, offset=...): # -> Uint16Vector:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Uint16VectorBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Values(self, j): # -> Literal[0]:
        ...
    
    def ValuesAsNumpy(self): # -> Literal[0]:
        ...
    
    def ValuesLength(self): # -> Any | Literal[0]:
        ...
    
    def ValuesIsNone(self):
        ...
    


def Uint16VectorStart(builder): # -> None:
    ...

def Uint16VectorAddValues(builder, values): # -> None:
    ...

def Uint16VectorStartValuesVector(builder, numElems):
    ...

def Uint16VectorEnd(builder):
    ...

class Uint16VectorT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Uint16VectorT:
        ...
    
    @classmethod
    def InitFromObj(cls, uint16Vector): # -> Uint16VectorT:
        ...
    
    def Pack(self, builder):
        ...
    


class Uint8Vector:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Uint8Vector:
        ...
    
    @classmethod
    def GetRootAsUint8Vector(cls, buf, offset=...): # -> Uint8Vector:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Uint8VectorBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Values(self, j): # -> Literal[0]:
        ...
    
    def ValuesAsNumpy(self): # -> Literal[0]:
        ...
    
    def ValuesLength(self): # -> Any | Literal[0]:
        ...
    
    def ValuesIsNone(self):
        ...
    


def Uint8VectorStart(builder): # -> None:
    ...

def Uint8VectorAddValues(builder, values): # -> None:
    ...

def Uint8VectorStartValuesVector(builder, numElems):
    ...

def Uint8VectorEnd(builder):
    ...

class Uint8VectorT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Uint8VectorT:
        ...
    
    @classmethod
    def InitFromObj(cls, uint8Vector): # -> Uint8VectorT:
        ...
    
    def Pack(self, builder):
        ...
    


class DimensionMetadata:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DimensionMetadata:
        ...
    
    @classmethod
    def GetRootAsDimensionMetadata(cls, buf, offset=...): # -> DimensionMetadata:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DimensionMetadataBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Format(self): # -> Literal[0]:
        ...
    
    def DenseSize(self): # -> Literal[0]:
        ...
    
    def ArraySegmentsType(self): # -> Literal[0]:
        ...
    
    def ArraySegments(self): # -> Table | None:
        ...
    
    def ArrayIndicesType(self): # -> Literal[0]:
        ...
    
    def ArrayIndices(self): # -> Table | None:
        ...
    


def DimensionMetadataStart(builder): # -> None:
    ...

def DimensionMetadataAddFormat(builder, format): # -> None:
    ...

def DimensionMetadataAddDenseSize(builder, denseSize): # -> None:
    ...

def DimensionMetadataAddArraySegmentsType(builder, arraySegmentsType): # -> None:
    ...

def DimensionMetadataAddArraySegments(builder, arraySegments): # -> None:
    ...

def DimensionMetadataAddArrayIndicesType(builder, arrayIndicesType): # -> None:
    ...

def DimensionMetadataAddArrayIndices(builder, arrayIndices): # -> None:
    ...

def DimensionMetadataEnd(builder):
    ...

class DimensionMetadataT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DimensionMetadataT:
        ...
    
    @classmethod
    def InitFromObj(cls, dimensionMetadata): # -> DimensionMetadataT:
        ...
    
    def Pack(self, builder):
        ...
    


class SparsityParameters:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SparsityParameters:
        ...
    
    @classmethod
    def GetRootAsSparsityParameters(cls, buf, offset=...): # -> SparsityParameters:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SparsityParametersBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def TraversalOrder(self, j): # -> Literal[0]:
        ...
    
    def TraversalOrderAsNumpy(self): # -> Literal[0]:
        ...
    
    def TraversalOrderLength(self): # -> Any | Literal[0]:
        ...
    
    def TraversalOrderIsNone(self):
        ...
    
    def BlockMap(self, j): # -> Literal[0]:
        ...
    
    def BlockMapAsNumpy(self): # -> Literal[0]:
        ...
    
    def BlockMapLength(self): # -> Any | Literal[0]:
        ...
    
    def BlockMapIsNone(self):
        ...
    
    def DimMetadata(self, j): # -> DimensionMetadata | None:
        ...
    
    def DimMetadataLength(self): # -> Any | Literal[0]:
        ...
    
    def DimMetadataIsNone(self):
        ...
    


def SparsityParametersStart(builder): # -> None:
    ...

def SparsityParametersAddTraversalOrder(builder, traversalOrder): # -> None:
    ...

def SparsityParametersStartTraversalOrderVector(builder, numElems):
    ...

def SparsityParametersAddBlockMap(builder, blockMap): # -> None:
    ...

def SparsityParametersStartBlockMapVector(builder, numElems):
    ...

def SparsityParametersAddDimMetadata(builder, dimMetadata): # -> None:
    ...

def SparsityParametersStartDimMetadataVector(builder, numElems):
    ...

def SparsityParametersEnd(builder):
    ...

class SparsityParametersT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SparsityParametersT:
        ...
    
    @classmethod
    def InitFromObj(cls, sparsityParameters): # -> SparsityParametersT:
        ...
    
    def Pack(self, builder):
        ...
    


class Tensor:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Tensor:
        ...
    
    @classmethod
    def GetRootAsTensor(cls, buf, offset=...): # -> Tensor:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TensorBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Shape(self, j): # -> Literal[0]:
        ...
    
    def ShapeAsNumpy(self): # -> Literal[0]:
        ...
    
    def ShapeLength(self): # -> Any | Literal[0]:
        ...
    
    def ShapeIsNone(self):
        ...
    
    def Type(self): # -> Literal[0]:
        ...
    
    def Buffer(self): # -> Literal[0]:
        ...
    
    def Name(self): # -> bytes | None:
        ...
    
    def Quantization(self): # -> QuantizationParameters | None:
        ...
    
    def IsVariable(self): # -> bool:
        ...
    
    def Sparsity(self): # -> SparsityParameters | None:
        ...
    
    def ShapeSignature(self, j): # -> Literal[0]:
        ...
    
    def ShapeSignatureAsNumpy(self): # -> Literal[0]:
        ...
    
    def ShapeSignatureLength(self): # -> Any | Literal[0]:
        ...
    
    def ShapeSignatureIsNone(self):
        ...
    
    def HasRank(self): # -> bool:
        ...
    


def TensorStart(builder): # -> None:
    ...

def TensorAddShape(builder, shape): # -> None:
    ...

def TensorStartShapeVector(builder, numElems):
    ...

def TensorAddType(builder, type): # -> None:
    ...

def TensorAddBuffer(builder, buffer): # -> None:
    ...

def TensorAddName(builder, name): # -> None:
    ...

def TensorAddQuantization(builder, quantization): # -> None:
    ...

def TensorAddIsVariable(builder, isVariable): # -> None:
    ...

def TensorAddSparsity(builder, sparsity): # -> None:
    ...

def TensorAddShapeSignature(builder, shapeSignature): # -> None:
    ...

def TensorStartShapeSignatureVector(builder, numElems):
    ...

def TensorAddHasRank(builder, hasRank): # -> None:
    ...

def TensorEnd(builder):
    ...

class TensorT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TensorT:
        ...
    
    @classmethod
    def InitFromObj(cls, tensor): # -> TensorT:
        ...
    
    def Pack(self, builder):
        ...
    


class Conv2DOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Conv2DOptions:
        ...
    
    @classmethod
    def GetRootAsConv2DOptions(cls, buf, offset=...): # -> Conv2DOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Conv2DOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Padding(self): # -> Literal[0]:
        ...
    
    def StrideW(self): # -> Literal[0]:
        ...
    
    def StrideH(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def DilationWFactor(self): # -> Literal[1]:
        ...
    
    def DilationHFactor(self): # -> Literal[1]:
        ...
    


def Conv2DOptionsStart(builder): # -> None:
    ...

def Conv2DOptionsAddPadding(builder, padding): # -> None:
    ...

def Conv2DOptionsAddStrideW(builder, strideW): # -> None:
    ...

def Conv2DOptionsAddStrideH(builder, strideH): # -> None:
    ...

def Conv2DOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def Conv2DOptionsAddDilationWFactor(builder, dilationWFactor): # -> None:
    ...

def Conv2DOptionsAddDilationHFactor(builder, dilationHFactor): # -> None:
    ...

def Conv2DOptionsEnd(builder):
    ...

class Conv2DOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Conv2DOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, conv2DOptions): # -> Conv2DOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class Conv3DOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Conv3DOptions:
        ...
    
    @classmethod
    def GetRootAsConv3DOptions(cls, buf, offset=...): # -> Conv3DOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Conv3DOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Padding(self): # -> Literal[0]:
        ...
    
    def StrideD(self): # -> Literal[0]:
        ...
    
    def StrideW(self): # -> Literal[0]:
        ...
    
    def StrideH(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def DilationDFactor(self): # -> Literal[1]:
        ...
    
    def DilationWFactor(self): # -> Literal[1]:
        ...
    
    def DilationHFactor(self): # -> Literal[1]:
        ...
    


def Conv3DOptionsStart(builder): # -> None:
    ...

def Conv3DOptionsAddPadding(builder, padding): # -> None:
    ...

def Conv3DOptionsAddStrideD(builder, strideD): # -> None:
    ...

def Conv3DOptionsAddStrideW(builder, strideW): # -> None:
    ...

def Conv3DOptionsAddStrideH(builder, strideH): # -> None:
    ...

def Conv3DOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def Conv3DOptionsAddDilationDFactor(builder, dilationDFactor): # -> None:
    ...

def Conv3DOptionsAddDilationWFactor(builder, dilationWFactor): # -> None:
    ...

def Conv3DOptionsAddDilationHFactor(builder, dilationHFactor): # -> None:
    ...

def Conv3DOptionsEnd(builder):
    ...

class Conv3DOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Conv3DOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, conv3DOptions): # -> Conv3DOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class Pool2DOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Pool2DOptions:
        ...
    
    @classmethod
    def GetRootAsPool2DOptions(cls, buf, offset=...): # -> Pool2DOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Pool2DOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Padding(self): # -> Literal[0]:
        ...
    
    def StrideW(self): # -> Literal[0]:
        ...
    
    def StrideH(self): # -> Literal[0]:
        ...
    
    def FilterWidth(self): # -> Literal[0]:
        ...
    
    def FilterHeight(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    


def Pool2DOptionsStart(builder): # -> None:
    ...

def Pool2DOptionsAddPadding(builder, padding): # -> None:
    ...

def Pool2DOptionsAddStrideW(builder, strideW): # -> None:
    ...

def Pool2DOptionsAddStrideH(builder, strideH): # -> None:
    ...

def Pool2DOptionsAddFilterWidth(builder, filterWidth): # -> None:
    ...

def Pool2DOptionsAddFilterHeight(builder, filterHeight): # -> None:
    ...

def Pool2DOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def Pool2DOptionsEnd(builder):
    ...

class Pool2DOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Pool2DOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, pool2DOptions): # -> Pool2DOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DepthwiseConv2DOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DepthwiseConv2DOptions:
        ...
    
    @classmethod
    def GetRootAsDepthwiseConv2DOptions(cls, buf, offset=...): # -> DepthwiseConv2DOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DepthwiseConv2DOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Padding(self): # -> Literal[0]:
        ...
    
    def StrideW(self): # -> Literal[0]:
        ...
    
    def StrideH(self): # -> Literal[0]:
        ...
    
    def DepthMultiplier(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def DilationWFactor(self): # -> Literal[1]:
        ...
    
    def DilationHFactor(self): # -> Literal[1]:
        ...
    


def DepthwiseConv2DOptionsStart(builder): # -> None:
    ...

def DepthwiseConv2DOptionsAddPadding(builder, padding): # -> None:
    ...

def DepthwiseConv2DOptionsAddStrideW(builder, strideW): # -> None:
    ...

def DepthwiseConv2DOptionsAddStrideH(builder, strideH): # -> None:
    ...

def DepthwiseConv2DOptionsAddDepthMultiplier(builder, depthMultiplier): # -> None:
    ...

def DepthwiseConv2DOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def DepthwiseConv2DOptionsAddDilationWFactor(builder, dilationWFactor): # -> None:
    ...

def DepthwiseConv2DOptionsAddDilationHFactor(builder, dilationHFactor): # -> None:
    ...

def DepthwiseConv2DOptionsEnd(builder):
    ...

class DepthwiseConv2DOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DepthwiseConv2DOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, depthwiseConv2DOptions): # -> DepthwiseConv2DOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ConcatEmbeddingsOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ConcatEmbeddingsOptions:
        ...
    
    @classmethod
    def GetRootAsConcatEmbeddingsOptions(cls, buf, offset=...): # -> ConcatEmbeddingsOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ConcatEmbeddingsOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def NumChannels(self): # -> Literal[0]:
        ...
    
    def NumColumnsPerChannel(self, j): # -> Literal[0]:
        ...
    
    def NumColumnsPerChannelAsNumpy(self): # -> Literal[0]:
        ...
    
    def NumColumnsPerChannelLength(self): # -> Any | Literal[0]:
        ...
    
    def NumColumnsPerChannelIsNone(self):
        ...
    
    def EmbeddingDimPerChannel(self, j): # -> Literal[0]:
        ...
    
    def EmbeddingDimPerChannelAsNumpy(self): # -> Literal[0]:
        ...
    
    def EmbeddingDimPerChannelLength(self): # -> Any | Literal[0]:
        ...
    
    def EmbeddingDimPerChannelIsNone(self):
        ...
    


def ConcatEmbeddingsOptionsStart(builder): # -> None:
    ...

def ConcatEmbeddingsOptionsAddNumChannels(builder, numChannels): # -> None:
    ...

def ConcatEmbeddingsOptionsAddNumColumnsPerChannel(builder, numColumnsPerChannel): # -> None:
    ...

def ConcatEmbeddingsOptionsStartNumColumnsPerChannelVector(builder, numElems):
    ...

def ConcatEmbeddingsOptionsAddEmbeddingDimPerChannel(builder, embeddingDimPerChannel): # -> None:
    ...

def ConcatEmbeddingsOptionsStartEmbeddingDimPerChannelVector(builder, numElems):
    ...

def ConcatEmbeddingsOptionsEnd(builder):
    ...

class ConcatEmbeddingsOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ConcatEmbeddingsOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, concatEmbeddingsOptions): # -> ConcatEmbeddingsOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LSHProjectionOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LSHProjectionOptions:
        ...
    
    @classmethod
    def GetRootAsLSHProjectionOptions(cls, buf, offset=...): # -> LSHProjectionOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LSHProjectionOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Type(self): # -> Literal[0]:
        ...
    


def LSHProjectionOptionsStart(builder): # -> None:
    ...

def LSHProjectionOptionsAddType(builder, type): # -> None:
    ...

def LSHProjectionOptionsEnd(builder):
    ...

class LSHProjectionOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LSHProjectionOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, lSHProjectionOptions): # -> LSHProjectionOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SVDFOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SVDFOptions:
        ...
    
    @classmethod
    def GetRootAsSVDFOptions(cls, buf, offset=...): # -> SVDFOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SVDFOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Rank(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def SVDFOptionsStart(builder): # -> None:
    ...

def SVDFOptionsAddRank(builder, rank): # -> None:
    ...

def SVDFOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def SVDFOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def SVDFOptionsEnd(builder):
    ...

class SVDFOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SVDFOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, sVDFOptions): # -> SVDFOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class RNNOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> RNNOptions:
        ...
    
    @classmethod
    def GetRootAsRNNOptions(cls, buf, offset=...): # -> RNNOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def RNNOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def RNNOptionsStart(builder): # -> None:
    ...

def RNNOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def RNNOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def RNNOptionsEnd(builder):
    ...

class RNNOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> RNNOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, rNNOptions): # -> RNNOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SequenceRNNOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SequenceRNNOptions:
        ...
    
    @classmethod
    def GetRootAsSequenceRNNOptions(cls, buf, offset=...): # -> SequenceRNNOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SequenceRNNOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def TimeMajor(self): # -> bool:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def SequenceRNNOptionsStart(builder): # -> None:
    ...

def SequenceRNNOptionsAddTimeMajor(builder, timeMajor): # -> None:
    ...

def SequenceRNNOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def SequenceRNNOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def SequenceRNNOptionsEnd(builder):
    ...

class SequenceRNNOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SequenceRNNOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, sequenceRNNOptions): # -> SequenceRNNOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BidirectionalSequenceRNNOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BidirectionalSequenceRNNOptions:
        ...
    
    @classmethod
    def GetRootAsBidirectionalSequenceRNNOptions(cls, buf, offset=...): # -> BidirectionalSequenceRNNOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BidirectionalSequenceRNNOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def TimeMajor(self): # -> bool:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def MergeOutputs(self): # -> bool:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def BidirectionalSequenceRNNOptionsStart(builder): # -> None:
    ...

def BidirectionalSequenceRNNOptionsAddTimeMajor(builder, timeMajor): # -> None:
    ...

def BidirectionalSequenceRNNOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def BidirectionalSequenceRNNOptionsAddMergeOutputs(builder, mergeOutputs): # -> None:
    ...

def BidirectionalSequenceRNNOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def BidirectionalSequenceRNNOptionsEnd(builder):
    ...

class BidirectionalSequenceRNNOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BidirectionalSequenceRNNOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, bidirectionalSequenceRNNOptions): # -> BidirectionalSequenceRNNOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class FullyConnectedOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> FullyConnectedOptions:
        ...
    
    @classmethod
    def GetRootAsFullyConnectedOptions(cls, buf, offset=...): # -> FullyConnectedOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def FullyConnectedOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def WeightsFormat(self): # -> Literal[0]:
        ...
    
    def KeepNumDims(self): # -> bool:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def FullyConnectedOptionsStart(builder): # -> None:
    ...

def FullyConnectedOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def FullyConnectedOptionsAddWeightsFormat(builder, weightsFormat): # -> None:
    ...

def FullyConnectedOptionsAddKeepNumDims(builder, keepNumDims): # -> None:
    ...

def FullyConnectedOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def FullyConnectedOptionsEnd(builder):
    ...

class FullyConnectedOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> FullyConnectedOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, fullyConnectedOptions): # -> FullyConnectedOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SoftmaxOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SoftmaxOptions:
        ...
    
    @classmethod
    def GetRootAsSoftmaxOptions(cls, buf, offset=...): # -> SoftmaxOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SoftmaxOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Beta(self): # -> float:
        ...
    


def SoftmaxOptionsStart(builder): # -> None:
    ...

def SoftmaxOptionsAddBeta(builder, beta): # -> None:
    ...

def SoftmaxOptionsEnd(builder):
    ...

class SoftmaxOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SoftmaxOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, softmaxOptions): # -> SoftmaxOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ConcatenationOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ConcatenationOptions:
        ...
    
    @classmethod
    def GetRootAsConcatenationOptions(cls, buf, offset=...): # -> ConcatenationOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ConcatenationOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Axis(self): # -> Literal[0]:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    


def ConcatenationOptionsStart(builder): # -> None:
    ...

def ConcatenationOptionsAddAxis(builder, axis): # -> None:
    ...

def ConcatenationOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def ConcatenationOptionsEnd(builder):
    ...

class ConcatenationOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ConcatenationOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, concatenationOptions): # -> ConcatenationOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class AddOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> AddOptions:
        ...
    
    @classmethod
    def GetRootAsAddOptions(cls, buf, offset=...): # -> AddOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def AddOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def PotScaleInt16(self): # -> bool:
        ...
    


def AddOptionsStart(builder): # -> None:
    ...

def AddOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def AddOptionsAddPotScaleInt16(builder, potScaleInt16): # -> None:
    ...

def AddOptionsEnd(builder):
    ...

class AddOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> AddOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, addOptions): # -> AddOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class MulOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> MulOptions:
        ...
    
    @classmethod
    def GetRootAsMulOptions(cls, buf, offset=...): # -> MulOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MulOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    


def MulOptionsStart(builder): # -> None:
    ...

def MulOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def MulOptionsEnd(builder):
    ...

class MulOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MulOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, mulOptions): # -> MulOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class L2NormOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> L2NormOptions:
        ...
    
    @classmethod
    def GetRootAsL2NormOptions(cls, buf, offset=...): # -> L2NormOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def L2NormOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    


def L2NormOptionsStart(builder): # -> None:
    ...

def L2NormOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def L2NormOptionsEnd(builder):
    ...

class L2NormOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> L2NormOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, l2NormOptions): # -> L2NormOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LocalResponseNormalizationOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LocalResponseNormalizationOptions:
        ...
    
    @classmethod
    def GetRootAsLocalResponseNormalizationOptions(cls, buf, offset=...): # -> LocalResponseNormalizationOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LocalResponseNormalizationOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Radius(self): # -> Literal[0]:
        ...
    
    def Bias(self): # -> float:
        ...
    
    def Alpha(self): # -> float:
        ...
    
    def Beta(self): # -> float:
        ...
    


def LocalResponseNormalizationOptionsStart(builder): # -> None:
    ...

def LocalResponseNormalizationOptionsAddRadius(builder, radius): # -> None:
    ...

def LocalResponseNormalizationOptionsAddBias(builder, bias): # -> None:
    ...

def LocalResponseNormalizationOptionsAddAlpha(builder, alpha): # -> None:
    ...

def LocalResponseNormalizationOptionsAddBeta(builder, beta): # -> None:
    ...

def LocalResponseNormalizationOptionsEnd(builder):
    ...

class LocalResponseNormalizationOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LocalResponseNormalizationOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, localResponseNormalizationOptions): # -> LocalResponseNormalizationOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LSTMOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LSTMOptions:
        ...
    
    @classmethod
    def GetRootAsLSTMOptions(cls, buf, offset=...): # -> LSTMOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LSTMOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def CellClip(self): # -> float:
        ...
    
    def ProjClip(self): # -> float:
        ...
    
    def KernelType(self): # -> Literal[0]:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def LSTMOptionsStart(builder): # -> None:
    ...

def LSTMOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def LSTMOptionsAddCellClip(builder, cellClip): # -> None:
    ...

def LSTMOptionsAddProjClip(builder, projClip): # -> None:
    ...

def LSTMOptionsAddKernelType(builder, kernelType): # -> None:
    ...

def LSTMOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def LSTMOptionsEnd(builder):
    ...

class LSTMOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LSTMOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, lSTMOptions): # -> LSTMOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UnidirectionalSequenceLSTMOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UnidirectionalSequenceLSTMOptions:
        ...
    
    @classmethod
    def GetRootAsUnidirectionalSequenceLSTMOptions(cls, buf, offset=...): # -> UnidirectionalSequenceLSTMOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UnidirectionalSequenceLSTMOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def CellClip(self): # -> float:
        ...
    
    def ProjClip(self): # -> float:
        ...
    
    def TimeMajor(self): # -> bool:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def UnidirectionalSequenceLSTMOptionsStart(builder): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsAddCellClip(builder, cellClip): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsAddProjClip(builder, projClip): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsAddTimeMajor(builder, timeMajor): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def UnidirectionalSequenceLSTMOptionsEnd(builder):
    ...

class UnidirectionalSequenceLSTMOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UnidirectionalSequenceLSTMOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, unidirectionalSequenceLSTMOptions): # -> UnidirectionalSequenceLSTMOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BidirectionalSequenceLSTMOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BidirectionalSequenceLSTMOptions:
        ...
    
    @classmethod
    def GetRootAsBidirectionalSequenceLSTMOptions(cls, buf, offset=...): # -> BidirectionalSequenceLSTMOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BidirectionalSequenceLSTMOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def CellClip(self): # -> float:
        ...
    
    def ProjClip(self): # -> float:
        ...
    
    def MergeOutputs(self): # -> bool:
        ...
    
    def TimeMajor(self): # -> bool:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def BidirectionalSequenceLSTMOptionsStart(builder): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddCellClip(builder, cellClip): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddProjClip(builder, projClip): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddMergeOutputs(builder, mergeOutputs): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddTimeMajor(builder, timeMajor): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def BidirectionalSequenceLSTMOptionsEnd(builder):
    ...

class BidirectionalSequenceLSTMOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BidirectionalSequenceLSTMOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, bidirectionalSequenceLSTMOptions): # -> BidirectionalSequenceLSTMOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ResizeBilinearOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ResizeBilinearOptions:
        ...
    
    @classmethod
    def GetRootAsResizeBilinearOptions(cls, buf, offset=...): # -> ResizeBilinearOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ResizeBilinearOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def AlignCorners(self): # -> bool:
        ...
    
    def HalfPixelCenters(self): # -> bool:
        ...
    


def ResizeBilinearOptionsStart(builder): # -> None:
    ...

def ResizeBilinearOptionsAddAlignCorners(builder, alignCorners): # -> None:
    ...

def ResizeBilinearOptionsAddHalfPixelCenters(builder, halfPixelCenters): # -> None:
    ...

def ResizeBilinearOptionsEnd(builder):
    ...

class ResizeBilinearOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ResizeBilinearOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, resizeBilinearOptions): # -> ResizeBilinearOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ResizeNearestNeighborOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ResizeNearestNeighborOptions:
        ...
    
    @classmethod
    def GetRootAsResizeNearestNeighborOptions(cls, buf, offset=...): # -> ResizeNearestNeighborOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ResizeNearestNeighborOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def AlignCorners(self): # -> bool:
        ...
    
    def HalfPixelCenters(self): # -> bool:
        ...
    


def ResizeNearestNeighborOptionsStart(builder): # -> None:
    ...

def ResizeNearestNeighborOptionsAddAlignCorners(builder, alignCorners): # -> None:
    ...

def ResizeNearestNeighborOptionsAddHalfPixelCenters(builder, halfPixelCenters): # -> None:
    ...

def ResizeNearestNeighborOptionsEnd(builder):
    ...

class ResizeNearestNeighborOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ResizeNearestNeighborOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, resizeNearestNeighborOptions): # -> ResizeNearestNeighborOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class CallOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CallOptions:
        ...
    
    @classmethod
    def GetRootAsCallOptions(cls, buf, offset=...): # -> CallOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CallOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Subgraph(self): # -> Literal[0]:
        ...
    


def CallOptionsStart(builder): # -> None:
    ...

def CallOptionsAddSubgraph(builder, subgraph): # -> None:
    ...

def CallOptionsEnd(builder):
    ...

class CallOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CallOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, callOptions): # -> CallOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class PadOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> PadOptions:
        ...
    
    @classmethod
    def GetRootAsPadOptions(cls, buf, offset=...): # -> PadOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def PadOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def PadOptionsStart(builder): # -> None:
    ...

def PadOptionsEnd(builder):
    ...

class PadOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> PadOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, padOptions): # -> PadOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class PadV2Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> PadV2Options:
        ...
    
    @classmethod
    def GetRootAsPadV2Options(cls, buf, offset=...): # -> PadV2Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def PadV2OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def PadV2OptionsStart(builder): # -> None:
    ...

def PadV2OptionsEnd(builder):
    ...

class PadV2OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> PadV2OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, padV2Options): # -> PadV2OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ReshapeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ReshapeOptions:
        ...
    
    @classmethod
    def GetRootAsReshapeOptions(cls, buf, offset=...): # -> ReshapeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ReshapeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def NewShape(self, j): # -> Literal[0]:
        ...
    
    def NewShapeAsNumpy(self): # -> Literal[0]:
        ...
    
    def NewShapeLength(self): # -> Any | Literal[0]:
        ...
    
    def NewShapeIsNone(self):
        ...
    


def ReshapeOptionsStart(builder): # -> None:
    ...

def ReshapeOptionsAddNewShape(builder, newShape): # -> None:
    ...

def ReshapeOptionsStartNewShapeVector(builder, numElems):
    ...

def ReshapeOptionsEnd(builder):
    ...

class ReshapeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ReshapeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, reshapeOptions): # -> ReshapeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SpaceToBatchNDOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SpaceToBatchNDOptions:
        ...
    
    @classmethod
    def GetRootAsSpaceToBatchNDOptions(cls, buf, offset=...): # -> SpaceToBatchNDOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SpaceToBatchNDOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SpaceToBatchNDOptionsStart(builder): # -> None:
    ...

def SpaceToBatchNDOptionsEnd(builder):
    ...

class SpaceToBatchNDOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SpaceToBatchNDOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, spaceToBatchNDOptions): # -> SpaceToBatchNDOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BatchToSpaceNDOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BatchToSpaceNDOptions:
        ...
    
    @classmethod
    def GetRootAsBatchToSpaceNDOptions(cls, buf, offset=...): # -> BatchToSpaceNDOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BatchToSpaceNDOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def BatchToSpaceNDOptionsStart(builder): # -> None:
    ...

def BatchToSpaceNDOptionsEnd(builder):
    ...

class BatchToSpaceNDOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BatchToSpaceNDOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, batchToSpaceNDOptions): # -> BatchToSpaceNDOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SkipGramOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SkipGramOptions:
        ...
    
    @classmethod
    def GetRootAsSkipGramOptions(cls, buf, offset=...): # -> SkipGramOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SkipGramOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def NgramSize(self): # -> Literal[0]:
        ...
    
    def MaxSkipSize(self): # -> Literal[0]:
        ...
    
    def IncludeAllNgrams(self): # -> bool:
        ...
    


def SkipGramOptionsStart(builder): # -> None:
    ...

def SkipGramOptionsAddNgramSize(builder, ngramSize): # -> None:
    ...

def SkipGramOptionsAddMaxSkipSize(builder, maxSkipSize): # -> None:
    ...

def SkipGramOptionsAddIncludeAllNgrams(builder, includeAllNgrams): # -> None:
    ...

def SkipGramOptionsEnd(builder):
    ...

class SkipGramOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SkipGramOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, skipGramOptions): # -> SkipGramOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SpaceToDepthOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SpaceToDepthOptions:
        ...
    
    @classmethod
    def GetRootAsSpaceToDepthOptions(cls, buf, offset=...): # -> SpaceToDepthOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SpaceToDepthOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def BlockSize(self): # -> Literal[0]:
        ...
    


def SpaceToDepthOptionsStart(builder): # -> None:
    ...

def SpaceToDepthOptionsAddBlockSize(builder, blockSize): # -> None:
    ...

def SpaceToDepthOptionsEnd(builder):
    ...

class SpaceToDepthOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SpaceToDepthOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, spaceToDepthOptions): # -> SpaceToDepthOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DepthToSpaceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DepthToSpaceOptions:
        ...
    
    @classmethod
    def GetRootAsDepthToSpaceOptions(cls, buf, offset=...): # -> DepthToSpaceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DepthToSpaceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def BlockSize(self): # -> Literal[0]:
        ...
    


def DepthToSpaceOptionsStart(builder): # -> None:
    ...

def DepthToSpaceOptionsAddBlockSize(builder, blockSize): # -> None:
    ...

def DepthToSpaceOptionsEnd(builder):
    ...

class DepthToSpaceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DepthToSpaceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, depthToSpaceOptions): # -> DepthToSpaceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SubOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SubOptions:
        ...
    
    @classmethod
    def GetRootAsSubOptions(cls, buf, offset=...): # -> SubOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SubOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    
    def PotScaleInt16(self): # -> bool:
        ...
    


def SubOptionsStart(builder): # -> None:
    ...

def SubOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def SubOptionsAddPotScaleInt16(builder, potScaleInt16): # -> None:
    ...

def SubOptionsEnd(builder):
    ...

class SubOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SubOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, subOptions): # -> SubOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DivOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DivOptions:
        ...
    
    @classmethod
    def GetRootAsDivOptions(cls, buf, offset=...): # -> DivOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DivOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def FusedActivationFunction(self): # -> Literal[0]:
        ...
    


def DivOptionsStart(builder): # -> None:
    ...

def DivOptionsAddFusedActivationFunction(builder, fusedActivationFunction): # -> None:
    ...

def DivOptionsEnd(builder):
    ...

class DivOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DivOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, divOptions): # -> DivOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class TopKV2Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> TopKV2Options:
        ...
    
    @classmethod
    def GetRootAsTopKV2Options(cls, buf, offset=...): # -> TopKV2Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TopKV2OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def TopKV2OptionsStart(builder): # -> None:
    ...

def TopKV2OptionsEnd(builder):
    ...

class TopKV2OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TopKV2OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, topKV2Options): # -> TopKV2OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class EmbeddingLookupSparseOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> EmbeddingLookupSparseOptions:
        ...
    
    @classmethod
    def GetRootAsEmbeddingLookupSparseOptions(cls, buf, offset=...): # -> EmbeddingLookupSparseOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def EmbeddingLookupSparseOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Combiner(self): # -> Literal[0]:
        ...
    


def EmbeddingLookupSparseOptionsStart(builder): # -> None:
    ...

def EmbeddingLookupSparseOptionsAddCombiner(builder, combiner): # -> None:
    ...

def EmbeddingLookupSparseOptionsEnd(builder):
    ...

class EmbeddingLookupSparseOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> EmbeddingLookupSparseOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, embeddingLookupSparseOptions): # -> EmbeddingLookupSparseOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class GatherOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> GatherOptions:
        ...
    
    @classmethod
    def GetRootAsGatherOptions(cls, buf, offset=...): # -> GatherOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def GatherOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Axis(self): # -> Literal[0]:
        ...
    
    def BatchDims(self): # -> Literal[0]:
        ...
    


def GatherOptionsStart(builder): # -> None:
    ...

def GatherOptionsAddAxis(builder, axis): # -> None:
    ...

def GatherOptionsAddBatchDims(builder, batchDims): # -> None:
    ...

def GatherOptionsEnd(builder):
    ...

class GatherOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> GatherOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, gatherOptions): # -> GatherOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class TransposeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> TransposeOptions:
        ...
    
    @classmethod
    def GetRootAsTransposeOptions(cls, buf, offset=...): # -> TransposeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TransposeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def TransposeOptionsStart(builder): # -> None:
    ...

def TransposeOptionsEnd(builder):
    ...

class TransposeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TransposeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, transposeOptions): # -> TransposeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ExpOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ExpOptions:
        ...
    
    @classmethod
    def GetRootAsExpOptions(cls, buf, offset=...): # -> ExpOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ExpOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ExpOptionsStart(builder): # -> None:
    ...

def ExpOptionsEnd(builder):
    ...

class ExpOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ExpOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, expOptions): # -> ExpOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class CosOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CosOptions:
        ...
    
    @classmethod
    def GetRootAsCosOptions(cls, buf, offset=...): # -> CosOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CosOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def CosOptionsStart(builder): # -> None:
    ...

def CosOptionsEnd(builder):
    ...

class CosOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CosOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, cosOptions): # -> CosOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ReducerOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ReducerOptions:
        ...
    
    @classmethod
    def GetRootAsReducerOptions(cls, buf, offset=...): # -> ReducerOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ReducerOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def KeepDims(self): # -> bool:
        ...
    


def ReducerOptionsStart(builder): # -> None:
    ...

def ReducerOptionsAddKeepDims(builder, keepDims): # -> None:
    ...

def ReducerOptionsEnd(builder):
    ...

class ReducerOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ReducerOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, reducerOptions): # -> ReducerOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SqueezeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SqueezeOptions:
        ...
    
    @classmethod
    def GetRootAsSqueezeOptions(cls, buf, offset=...): # -> SqueezeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SqueezeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def SqueezeDims(self, j): # -> Literal[0]:
        ...
    
    def SqueezeDimsAsNumpy(self): # -> Literal[0]:
        ...
    
    def SqueezeDimsLength(self): # -> Any | Literal[0]:
        ...
    
    def SqueezeDimsIsNone(self):
        ...
    


def SqueezeOptionsStart(builder): # -> None:
    ...

def SqueezeOptionsAddSqueezeDims(builder, squeezeDims): # -> None:
    ...

def SqueezeOptionsStartSqueezeDimsVector(builder, numElems):
    ...

def SqueezeOptionsEnd(builder):
    ...

class SqueezeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SqueezeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, squeezeOptions): # -> SqueezeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SplitOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SplitOptions:
        ...
    
    @classmethod
    def GetRootAsSplitOptions(cls, buf, offset=...): # -> SplitOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SplitOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def NumSplits(self): # -> Literal[0]:
        ...
    


def SplitOptionsStart(builder): # -> None:
    ...

def SplitOptionsAddNumSplits(builder, numSplits): # -> None:
    ...

def SplitOptionsEnd(builder):
    ...

class SplitOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SplitOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, splitOptions): # -> SplitOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SplitVOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SplitVOptions:
        ...
    
    @classmethod
    def GetRootAsSplitVOptions(cls, buf, offset=...): # -> SplitVOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SplitVOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def NumSplits(self): # -> Literal[0]:
        ...
    


def SplitVOptionsStart(builder): # -> None:
    ...

def SplitVOptionsAddNumSplits(builder, numSplits): # -> None:
    ...

def SplitVOptionsEnd(builder):
    ...

class SplitVOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SplitVOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, splitVOptions): # -> SplitVOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class StridedSliceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> StridedSliceOptions:
        ...
    
    @classmethod
    def GetRootAsStridedSliceOptions(cls, buf, offset=...): # -> StridedSliceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def StridedSliceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def BeginMask(self): # -> Literal[0]:
        ...
    
    def EndMask(self): # -> Literal[0]:
        ...
    
    def EllipsisMask(self): # -> Literal[0]:
        ...
    
    def NewAxisMask(self): # -> Literal[0]:
        ...
    
    def ShrinkAxisMask(self): # -> Literal[0]:
        ...
    


def StridedSliceOptionsStart(builder): # -> None:
    ...

def StridedSliceOptionsAddBeginMask(builder, beginMask): # -> None:
    ...

def StridedSliceOptionsAddEndMask(builder, endMask): # -> None:
    ...

def StridedSliceOptionsAddEllipsisMask(builder, ellipsisMask): # -> None:
    ...

def StridedSliceOptionsAddNewAxisMask(builder, newAxisMask): # -> None:
    ...

def StridedSliceOptionsAddShrinkAxisMask(builder, shrinkAxisMask): # -> None:
    ...

def StridedSliceOptionsEnd(builder):
    ...

class StridedSliceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> StridedSliceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, stridedSliceOptions): # -> StridedSliceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LogSoftmaxOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LogSoftmaxOptions:
        ...
    
    @classmethod
    def GetRootAsLogSoftmaxOptions(cls, buf, offset=...): # -> LogSoftmaxOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LogSoftmaxOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LogSoftmaxOptionsStart(builder): # -> None:
    ...

def LogSoftmaxOptionsEnd(builder):
    ...

class LogSoftmaxOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LogSoftmaxOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, logSoftmaxOptions): # -> LogSoftmaxOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class CastOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CastOptions:
        ...
    
    @classmethod
    def GetRootAsCastOptions(cls, buf, offset=...): # -> CastOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CastOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def InDataType(self): # -> Literal[0]:
        ...
    
    def OutDataType(self): # -> Literal[0]:
        ...
    


def CastOptionsStart(builder): # -> None:
    ...

def CastOptionsAddInDataType(builder, inDataType): # -> None:
    ...

def CastOptionsAddOutDataType(builder, outDataType): # -> None:
    ...

def CastOptionsEnd(builder):
    ...

class CastOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CastOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, castOptions): # -> CastOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DequantizeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DequantizeOptions:
        ...
    
    @classmethod
    def GetRootAsDequantizeOptions(cls, buf, offset=...): # -> DequantizeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DequantizeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def DequantizeOptionsStart(builder): # -> None:
    ...

def DequantizeOptionsEnd(builder):
    ...

class DequantizeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DequantizeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, dequantizeOptions): # -> DequantizeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class MaximumMinimumOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> MaximumMinimumOptions:
        ...
    
    @classmethod
    def GetRootAsMaximumMinimumOptions(cls, buf, offset=...): # -> MaximumMinimumOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MaximumMinimumOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def MaximumMinimumOptionsStart(builder): # -> None:
    ...

def MaximumMinimumOptionsEnd(builder):
    ...

class MaximumMinimumOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MaximumMinimumOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, maximumMinimumOptions): # -> MaximumMinimumOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class TileOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> TileOptions:
        ...
    
    @classmethod
    def GetRootAsTileOptions(cls, buf, offset=...): # -> TileOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TileOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def TileOptionsStart(builder): # -> None:
    ...

def TileOptionsEnd(builder):
    ...

class TileOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TileOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, tileOptions): # -> TileOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ArgMaxOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ArgMaxOptions:
        ...
    
    @classmethod
    def GetRootAsArgMaxOptions(cls, buf, offset=...): # -> ArgMaxOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ArgMaxOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def OutputType(self): # -> Literal[0]:
        ...
    


def ArgMaxOptionsStart(builder): # -> None:
    ...

def ArgMaxOptionsAddOutputType(builder, outputType): # -> None:
    ...

def ArgMaxOptionsEnd(builder):
    ...

class ArgMaxOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ArgMaxOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, argMaxOptions): # -> ArgMaxOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ArgMinOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ArgMinOptions:
        ...
    
    @classmethod
    def GetRootAsArgMinOptions(cls, buf, offset=...): # -> ArgMinOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ArgMinOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def OutputType(self): # -> Literal[0]:
        ...
    


def ArgMinOptionsStart(builder): # -> None:
    ...

def ArgMinOptionsAddOutputType(builder, outputType): # -> None:
    ...

def ArgMinOptionsEnd(builder):
    ...

class ArgMinOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ArgMinOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, argMinOptions): # -> ArgMinOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class GreaterOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> GreaterOptions:
        ...
    
    @classmethod
    def GetRootAsGreaterOptions(cls, buf, offset=...): # -> GreaterOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def GreaterOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def GreaterOptionsStart(builder): # -> None:
    ...

def GreaterOptionsEnd(builder):
    ...

class GreaterOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> GreaterOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, greaterOptions): # -> GreaterOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class GreaterEqualOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> GreaterEqualOptions:
        ...
    
    @classmethod
    def GetRootAsGreaterEqualOptions(cls, buf, offset=...): # -> GreaterEqualOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def GreaterEqualOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def GreaterEqualOptionsStart(builder): # -> None:
    ...

def GreaterEqualOptionsEnd(builder):
    ...

class GreaterEqualOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> GreaterEqualOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, greaterEqualOptions): # -> GreaterEqualOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LessOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LessOptions:
        ...
    
    @classmethod
    def GetRootAsLessOptions(cls, buf, offset=...): # -> LessOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LessOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LessOptionsStart(builder): # -> None:
    ...

def LessOptionsEnd(builder):
    ...

class LessOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LessOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, lessOptions): # -> LessOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LessEqualOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LessEqualOptions:
        ...
    
    @classmethod
    def GetRootAsLessEqualOptions(cls, buf, offset=...): # -> LessEqualOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LessEqualOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LessEqualOptionsStart(builder): # -> None:
    ...

def LessEqualOptionsEnd(builder):
    ...

class LessEqualOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LessEqualOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, lessEqualOptions): # -> LessEqualOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class NegOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> NegOptions:
        ...
    
    @classmethod
    def GetRootAsNegOptions(cls, buf, offset=...): # -> NegOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def NegOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def NegOptionsStart(builder): # -> None:
    ...

def NegOptionsEnd(builder):
    ...

class NegOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> NegOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, negOptions): # -> NegOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SelectOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SelectOptions:
        ...
    
    @classmethod
    def GetRootAsSelectOptions(cls, buf, offset=...): # -> SelectOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SelectOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SelectOptionsStart(builder): # -> None:
    ...

def SelectOptionsEnd(builder):
    ...

class SelectOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SelectOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, selectOptions): # -> SelectOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SliceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SliceOptions:
        ...
    
    @classmethod
    def GetRootAsSliceOptions(cls, buf, offset=...): # -> SliceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SliceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SliceOptionsStart(builder): # -> None:
    ...

def SliceOptionsEnd(builder):
    ...

class SliceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SliceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, sliceOptions): # -> SliceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class TransposeConvOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> TransposeConvOptions:
        ...
    
    @classmethod
    def GetRootAsTransposeConvOptions(cls, buf, offset=...): # -> TransposeConvOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TransposeConvOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Padding(self): # -> Literal[0]:
        ...
    
    def StrideW(self): # -> Literal[0]:
        ...
    
    def StrideH(self): # -> Literal[0]:
        ...
    


def TransposeConvOptionsStart(builder): # -> None:
    ...

def TransposeConvOptionsAddPadding(builder, padding): # -> None:
    ...

def TransposeConvOptionsAddStrideW(builder, strideW): # -> None:
    ...

def TransposeConvOptionsAddStrideH(builder, strideH): # -> None:
    ...

def TransposeConvOptionsEnd(builder):
    ...

class TransposeConvOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TransposeConvOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, transposeConvOptions): # -> TransposeConvOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ExpandDimsOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ExpandDimsOptions:
        ...
    
    @classmethod
    def GetRootAsExpandDimsOptions(cls, buf, offset=...): # -> ExpandDimsOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ExpandDimsOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ExpandDimsOptionsStart(builder): # -> None:
    ...

def ExpandDimsOptionsEnd(builder):
    ...

class ExpandDimsOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ExpandDimsOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, expandDimsOptions): # -> ExpandDimsOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SparseToDenseOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SparseToDenseOptions:
        ...
    
    @classmethod
    def GetRootAsSparseToDenseOptions(cls, buf, offset=...): # -> SparseToDenseOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SparseToDenseOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def ValidateIndices(self): # -> bool:
        ...
    


def SparseToDenseOptionsStart(builder): # -> None:
    ...

def SparseToDenseOptionsAddValidateIndices(builder, validateIndices): # -> None:
    ...

def SparseToDenseOptionsEnd(builder):
    ...

class SparseToDenseOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SparseToDenseOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, sparseToDenseOptions): # -> SparseToDenseOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class EqualOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> EqualOptions:
        ...
    
    @classmethod
    def GetRootAsEqualOptions(cls, buf, offset=...): # -> EqualOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def EqualOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def EqualOptionsStart(builder): # -> None:
    ...

def EqualOptionsEnd(builder):
    ...

class EqualOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> EqualOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, equalOptions): # -> EqualOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class NotEqualOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> NotEqualOptions:
        ...
    
    @classmethod
    def GetRootAsNotEqualOptions(cls, buf, offset=...): # -> NotEqualOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def NotEqualOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def NotEqualOptionsStart(builder): # -> None:
    ...

def NotEqualOptionsEnd(builder):
    ...

class NotEqualOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> NotEqualOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, notEqualOptions): # -> NotEqualOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ShapeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ShapeOptions:
        ...
    
    @classmethod
    def GetRootAsShapeOptions(cls, buf, offset=...): # -> ShapeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ShapeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def OutType(self): # -> Literal[0]:
        ...
    


def ShapeOptionsStart(builder): # -> None:
    ...

def ShapeOptionsAddOutType(builder, outType): # -> None:
    ...

def ShapeOptionsEnd(builder):
    ...

class ShapeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ShapeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, shapeOptions): # -> ShapeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class RankOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> RankOptions:
        ...
    
    @classmethod
    def GetRootAsRankOptions(cls, buf, offset=...): # -> RankOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def RankOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def RankOptionsStart(builder): # -> None:
    ...

def RankOptionsEnd(builder):
    ...

class RankOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> RankOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, rankOptions): # -> RankOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class PowOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> PowOptions:
        ...
    
    @classmethod
    def GetRootAsPowOptions(cls, buf, offset=...): # -> PowOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def PowOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def PowOptionsStart(builder): # -> None:
    ...

def PowOptionsEnd(builder):
    ...

class PowOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> PowOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, powOptions): # -> PowOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class FakeQuantOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> FakeQuantOptions:
        ...
    
    @classmethod
    def GetRootAsFakeQuantOptions(cls, buf, offset=...): # -> FakeQuantOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def FakeQuantOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Min(self): # -> float:
        ...
    
    def Max(self): # -> float:
        ...
    
    def NumBits(self): # -> Literal[0]:
        ...
    
    def NarrowRange(self): # -> bool:
        ...
    


def FakeQuantOptionsStart(builder): # -> None:
    ...

def FakeQuantOptionsAddMin(builder, min): # -> None:
    ...

def FakeQuantOptionsAddMax(builder, max): # -> None:
    ...

def FakeQuantOptionsAddNumBits(builder, numBits): # -> None:
    ...

def FakeQuantOptionsAddNarrowRange(builder, narrowRange): # -> None:
    ...

def FakeQuantOptionsEnd(builder):
    ...

class FakeQuantOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> FakeQuantOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, fakeQuantOptions): # -> FakeQuantOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class PackOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> PackOptions:
        ...
    
    @classmethod
    def GetRootAsPackOptions(cls, buf, offset=...): # -> PackOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def PackOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def ValuesCount(self): # -> Literal[0]:
        ...
    
    def Axis(self): # -> Literal[0]:
        ...
    


def PackOptionsStart(builder): # -> None:
    ...

def PackOptionsAddValuesCount(builder, valuesCount): # -> None:
    ...

def PackOptionsAddAxis(builder, axis): # -> None:
    ...

def PackOptionsEnd(builder):
    ...

class PackOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> PackOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, packOptions): # -> PackOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LogicalOrOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LogicalOrOptions:
        ...
    
    @classmethod
    def GetRootAsLogicalOrOptions(cls, buf, offset=...): # -> LogicalOrOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LogicalOrOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LogicalOrOptionsStart(builder): # -> None:
    ...

def LogicalOrOptionsEnd(builder):
    ...

class LogicalOrOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LogicalOrOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, logicalOrOptions): # -> LogicalOrOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class OneHotOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> OneHotOptions:
        ...
    
    @classmethod
    def GetRootAsOneHotOptions(cls, buf, offset=...): # -> OneHotOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def OneHotOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Axis(self): # -> Literal[0]:
        ...
    


def OneHotOptionsStart(builder): # -> None:
    ...

def OneHotOptionsAddAxis(builder, axis): # -> None:
    ...

def OneHotOptionsEnd(builder):
    ...

class OneHotOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> OneHotOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, oneHotOptions): # -> OneHotOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class AbsOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> AbsOptions:
        ...
    
    @classmethod
    def GetRootAsAbsOptions(cls, buf, offset=...): # -> AbsOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def AbsOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def AbsOptionsStart(builder): # -> None:
    ...

def AbsOptionsEnd(builder):
    ...

class AbsOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> AbsOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, absOptions): # -> AbsOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class HardSwishOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> HardSwishOptions:
        ...
    
    @classmethod
    def GetRootAsHardSwishOptions(cls, buf, offset=...): # -> HardSwishOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def HardSwishOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def HardSwishOptionsStart(builder): # -> None:
    ...

def HardSwishOptionsEnd(builder):
    ...

class HardSwishOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> HardSwishOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, hardSwishOptions): # -> HardSwishOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LogicalAndOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LogicalAndOptions:
        ...
    
    @classmethod
    def GetRootAsLogicalAndOptions(cls, buf, offset=...): # -> LogicalAndOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LogicalAndOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LogicalAndOptionsStart(builder): # -> None:
    ...

def LogicalAndOptionsEnd(builder):
    ...

class LogicalAndOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LogicalAndOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, logicalAndOptions): # -> LogicalAndOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LogicalNotOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LogicalNotOptions:
        ...
    
    @classmethod
    def GetRootAsLogicalNotOptions(cls, buf, offset=...): # -> LogicalNotOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LogicalNotOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def LogicalNotOptionsStart(builder): # -> None:
    ...

def LogicalNotOptionsEnd(builder):
    ...

class LogicalNotOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LogicalNotOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, logicalNotOptions): # -> LogicalNotOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UnpackOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UnpackOptions:
        ...
    
    @classmethod
    def GetRootAsUnpackOptions(cls, buf, offset=...): # -> UnpackOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UnpackOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Num(self): # -> Literal[0]:
        ...
    
    def Axis(self): # -> Literal[0]:
        ...
    


def UnpackOptionsStart(builder): # -> None:
    ...

def UnpackOptionsAddNum(builder, num): # -> None:
    ...

def UnpackOptionsAddAxis(builder, axis): # -> None:
    ...

def UnpackOptionsEnd(builder):
    ...

class UnpackOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UnpackOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, unpackOptions): # -> UnpackOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class FloorDivOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> FloorDivOptions:
        ...
    
    @classmethod
    def GetRootAsFloorDivOptions(cls, buf, offset=...): # -> FloorDivOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def FloorDivOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def FloorDivOptionsStart(builder): # -> None:
    ...

def FloorDivOptionsEnd(builder):
    ...

class FloorDivOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> FloorDivOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, floorDivOptions): # -> FloorDivOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SquareOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SquareOptions:
        ...
    
    @classmethod
    def GetRootAsSquareOptions(cls, buf, offset=...): # -> SquareOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SquareOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SquareOptionsStart(builder): # -> None:
    ...

def SquareOptionsEnd(builder):
    ...

class SquareOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SquareOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, squareOptions): # -> SquareOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ZerosLikeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ZerosLikeOptions:
        ...
    
    @classmethod
    def GetRootAsZerosLikeOptions(cls, buf, offset=...): # -> ZerosLikeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ZerosLikeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ZerosLikeOptionsStart(builder): # -> None:
    ...

def ZerosLikeOptionsEnd(builder):
    ...

class ZerosLikeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ZerosLikeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, zerosLikeOptions): # -> ZerosLikeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class FillOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> FillOptions:
        ...
    
    @classmethod
    def GetRootAsFillOptions(cls, buf, offset=...): # -> FillOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def FillOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def FillOptionsStart(builder): # -> None:
    ...

def FillOptionsEnd(builder):
    ...

class FillOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> FillOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, fillOptions): # -> FillOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class FloorModOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> FloorModOptions:
        ...
    
    @classmethod
    def GetRootAsFloorModOptions(cls, buf, offset=...): # -> FloorModOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def FloorModOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def FloorModOptionsStart(builder): # -> None:
    ...

def FloorModOptionsEnd(builder):
    ...

class FloorModOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> FloorModOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, floorModOptions): # -> FloorModOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class RangeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> RangeOptions:
        ...
    
    @classmethod
    def GetRootAsRangeOptions(cls, buf, offset=...): # -> RangeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def RangeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def RangeOptionsStart(builder): # -> None:
    ...

def RangeOptionsEnd(builder):
    ...

class RangeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> RangeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, rangeOptions): # -> RangeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class LeakyReluOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> LeakyReluOptions:
        ...
    
    @classmethod
    def GetRootAsLeakyReluOptions(cls, buf, offset=...): # -> LeakyReluOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def LeakyReluOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Alpha(self): # -> float:
        ...
    


def LeakyReluOptionsStart(builder): # -> None:
    ...

def LeakyReluOptionsAddAlpha(builder, alpha): # -> None:
    ...

def LeakyReluOptionsEnd(builder):
    ...

class LeakyReluOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> LeakyReluOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, leakyReluOptions): # -> LeakyReluOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SquaredDifferenceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SquaredDifferenceOptions:
        ...
    
    @classmethod
    def GetRootAsSquaredDifferenceOptions(cls, buf, offset=...): # -> SquaredDifferenceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SquaredDifferenceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SquaredDifferenceOptionsStart(builder): # -> None:
    ...

def SquaredDifferenceOptionsEnd(builder):
    ...

class SquaredDifferenceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SquaredDifferenceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, squaredDifferenceOptions): # -> SquaredDifferenceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class MirrorPadOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> MirrorPadOptions:
        ...
    
    @classmethod
    def GetRootAsMirrorPadOptions(cls, buf, offset=...): # -> MirrorPadOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MirrorPadOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Mode(self): # -> Literal[0]:
        ...
    


def MirrorPadOptionsStart(builder): # -> None:
    ...

def MirrorPadOptionsAddMode(builder, mode): # -> None:
    ...

def MirrorPadOptionsEnd(builder):
    ...

class MirrorPadOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MirrorPadOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, mirrorPadOptions): # -> MirrorPadOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UniqueOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UniqueOptions:
        ...
    
    @classmethod
    def GetRootAsUniqueOptions(cls, buf, offset=...): # -> UniqueOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UniqueOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def IdxOutType(self): # -> Literal[2]:
        ...
    


def UniqueOptionsStart(builder): # -> None:
    ...

def UniqueOptionsAddIdxOutType(builder, idxOutType): # -> None:
    ...

def UniqueOptionsEnd(builder):
    ...

class UniqueOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UniqueOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, uniqueOptions): # -> UniqueOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ReverseV2Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ReverseV2Options:
        ...
    
    @classmethod
    def GetRootAsReverseV2Options(cls, buf, offset=...): # -> ReverseV2Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ReverseV2OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ReverseV2OptionsStart(builder): # -> None:
    ...

def ReverseV2OptionsEnd(builder):
    ...

class ReverseV2OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ReverseV2OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, reverseV2Options): # -> ReverseV2OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class AddNOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> AddNOptions:
        ...
    
    @classmethod
    def GetRootAsAddNOptions(cls, buf, offset=...): # -> AddNOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def AddNOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def AddNOptionsStart(builder): # -> None:
    ...

def AddNOptionsEnd(builder):
    ...

class AddNOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> AddNOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, addNOptions): # -> AddNOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class GatherNdOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> GatherNdOptions:
        ...
    
    @classmethod
    def GetRootAsGatherNdOptions(cls, buf, offset=...): # -> GatherNdOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def GatherNdOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def GatherNdOptionsStart(builder): # -> None:
    ...

def GatherNdOptionsEnd(builder):
    ...

class GatherNdOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> GatherNdOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, gatherNdOptions): # -> GatherNdOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class WhereOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> WhereOptions:
        ...
    
    @classmethod
    def GetRootAsWhereOptions(cls, buf, offset=...): # -> WhereOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def WhereOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def WhereOptionsStart(builder): # -> None:
    ...

def WhereOptionsEnd(builder):
    ...

class WhereOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> WhereOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, whereOptions): # -> WhereOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ReverseSequenceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ReverseSequenceOptions:
        ...
    
    @classmethod
    def GetRootAsReverseSequenceOptions(cls, buf, offset=...): # -> ReverseSequenceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ReverseSequenceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def SeqDim(self): # -> Literal[0]:
        ...
    
    def BatchDim(self): # -> Literal[0]:
        ...
    


def ReverseSequenceOptionsStart(builder): # -> None:
    ...

def ReverseSequenceOptionsAddSeqDim(builder, seqDim): # -> None:
    ...

def ReverseSequenceOptionsAddBatchDim(builder, batchDim): # -> None:
    ...

def ReverseSequenceOptionsEnd(builder):
    ...

class ReverseSequenceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ReverseSequenceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, reverseSequenceOptions): # -> ReverseSequenceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class MatrixDiagOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> MatrixDiagOptions:
        ...
    
    @classmethod
    def GetRootAsMatrixDiagOptions(cls, buf, offset=...): # -> MatrixDiagOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MatrixDiagOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def MatrixDiagOptionsStart(builder): # -> None:
    ...

def MatrixDiagOptionsEnd(builder):
    ...

class MatrixDiagOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MatrixDiagOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, matrixDiagOptions): # -> MatrixDiagOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class QuantizeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> QuantizeOptions:
        ...
    
    @classmethod
    def GetRootAsQuantizeOptions(cls, buf, offset=...): # -> QuantizeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def QuantizeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def QuantizeOptionsStart(builder): # -> None:
    ...

def QuantizeOptionsEnd(builder):
    ...

class QuantizeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> QuantizeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, quantizeOptions): # -> QuantizeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class MatrixSetDiagOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> MatrixSetDiagOptions:
        ...
    
    @classmethod
    def GetRootAsMatrixSetDiagOptions(cls, buf, offset=...): # -> MatrixSetDiagOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MatrixSetDiagOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def MatrixSetDiagOptionsStart(builder): # -> None:
    ...

def MatrixSetDiagOptionsEnd(builder):
    ...

class MatrixSetDiagOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MatrixSetDiagOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, matrixSetDiagOptions): # -> MatrixSetDiagOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class IfOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> IfOptions:
        ...
    
    @classmethod
    def GetRootAsIfOptions(cls, buf, offset=...): # -> IfOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def IfOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def ThenSubgraphIndex(self): # -> Literal[0]:
        ...
    
    def ElseSubgraphIndex(self): # -> Literal[0]:
        ...
    


def IfOptionsStart(builder): # -> None:
    ...

def IfOptionsAddThenSubgraphIndex(builder, thenSubgraphIndex): # -> None:
    ...

def IfOptionsAddElseSubgraphIndex(builder, elseSubgraphIndex): # -> None:
    ...

def IfOptionsEnd(builder):
    ...

class IfOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> IfOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, ifOptions): # -> IfOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class CallOnceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CallOnceOptions:
        ...
    
    @classmethod
    def GetRootAsCallOnceOptions(cls, buf, offset=...): # -> CallOnceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CallOnceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def InitSubgraphIndex(self): # -> Literal[0]:
        ...
    


def CallOnceOptionsStart(builder): # -> None:
    ...

def CallOnceOptionsAddInitSubgraphIndex(builder, initSubgraphIndex): # -> None:
    ...

def CallOnceOptionsEnd(builder):
    ...

class CallOnceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CallOnceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, callOnceOptions): # -> CallOnceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class WhileOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> WhileOptions:
        ...
    
    @classmethod
    def GetRootAsWhileOptions(cls, buf, offset=...): # -> WhileOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def WhileOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def CondSubgraphIndex(self): # -> Literal[0]:
        ...
    
    def BodySubgraphIndex(self): # -> Literal[0]:
        ...
    


def WhileOptionsStart(builder): # -> None:
    ...

def WhileOptionsAddCondSubgraphIndex(builder, condSubgraphIndex): # -> None:
    ...

def WhileOptionsAddBodySubgraphIndex(builder, bodySubgraphIndex): # -> None:
    ...

def WhileOptionsEnd(builder):
    ...

class WhileOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> WhileOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, whileOptions): # -> WhileOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class NonMaxSuppressionV4Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> NonMaxSuppressionV4Options:
        ...
    
    @classmethod
    def GetRootAsNonMaxSuppressionV4Options(cls, buf, offset=...): # -> NonMaxSuppressionV4Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def NonMaxSuppressionV4OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def NonMaxSuppressionV4OptionsStart(builder): # -> None:
    ...

def NonMaxSuppressionV4OptionsEnd(builder):
    ...

class NonMaxSuppressionV4OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> NonMaxSuppressionV4OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, nonMaxSuppressionV4Options): # -> NonMaxSuppressionV4OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class NonMaxSuppressionV5Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> NonMaxSuppressionV5Options:
        ...
    
    @classmethod
    def GetRootAsNonMaxSuppressionV5Options(cls, buf, offset=...): # -> NonMaxSuppressionV5Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def NonMaxSuppressionV5OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def NonMaxSuppressionV5OptionsStart(builder): # -> None:
    ...

def NonMaxSuppressionV5OptionsEnd(builder):
    ...

class NonMaxSuppressionV5OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> NonMaxSuppressionV5OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, nonMaxSuppressionV5Options): # -> NonMaxSuppressionV5OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ScatterNdOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ScatterNdOptions:
        ...
    
    @classmethod
    def GetRootAsScatterNdOptions(cls, buf, offset=...): # -> ScatterNdOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ScatterNdOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ScatterNdOptionsStart(builder): # -> None:
    ...

def ScatterNdOptionsEnd(builder):
    ...

class ScatterNdOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ScatterNdOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, scatterNdOptions): # -> ScatterNdOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SelectV2Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SelectV2Options:
        ...
    
    @classmethod
    def GetRootAsSelectV2Options(cls, buf, offset=...): # -> SelectV2Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SelectV2OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SelectV2OptionsStart(builder): # -> None:
    ...

def SelectV2OptionsEnd(builder):
    ...

class SelectV2OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SelectV2OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, selectV2Options): # -> SelectV2OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DensifyOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DensifyOptions:
        ...
    
    @classmethod
    def GetRootAsDensifyOptions(cls, buf, offset=...): # -> DensifyOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DensifyOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def DensifyOptionsStart(builder): # -> None:
    ...

def DensifyOptionsEnd(builder):
    ...

class DensifyOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DensifyOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, densifyOptions): # -> DensifyOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class SegmentSumOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SegmentSumOptions:
        ...
    
    @classmethod
    def GetRootAsSegmentSumOptions(cls, buf, offset=...): # -> SegmentSumOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SegmentSumOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def SegmentSumOptionsStart(builder): # -> None:
    ...

def SegmentSumOptionsEnd(builder):
    ...

class SegmentSumOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SegmentSumOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, segmentSumOptions): # -> SegmentSumOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BatchMatMulOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BatchMatMulOptions:
        ...
    
    @classmethod
    def GetRootAsBatchMatMulOptions(cls, buf, offset=...): # -> BatchMatMulOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BatchMatMulOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def AdjX(self): # -> bool:
        ...
    
    def AdjY(self): # -> bool:
        ...
    
    def AsymmetricQuantizeInputs(self): # -> bool:
        ...
    


def BatchMatMulOptionsStart(builder): # -> None:
    ...

def BatchMatMulOptionsAddAdjX(builder, adjX): # -> None:
    ...

def BatchMatMulOptionsAddAdjY(builder, adjY): # -> None:
    ...

def BatchMatMulOptionsAddAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs): # -> None:
    ...

def BatchMatMulOptionsEnd(builder):
    ...

class BatchMatMulOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BatchMatMulOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, batchMatMulOptions): # -> BatchMatMulOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class CumsumOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> CumsumOptions:
        ...
    
    @classmethod
    def GetRootAsCumsumOptions(cls, buf, offset=...): # -> CumsumOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def CumsumOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Exclusive(self): # -> bool:
        ...
    
    def Reverse(self): # -> bool:
        ...
    


def CumsumOptionsStart(builder): # -> None:
    ...

def CumsumOptionsAddExclusive(builder, exclusive): # -> None:
    ...

def CumsumOptionsAddReverse(builder, reverse): # -> None:
    ...

def CumsumOptionsEnd(builder):
    ...

class CumsumOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> CumsumOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, cumsumOptions): # -> CumsumOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BroadcastToOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BroadcastToOptions:
        ...
    
    @classmethod
    def GetRootAsBroadcastToOptions(cls, buf, offset=...): # -> BroadcastToOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BroadcastToOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def BroadcastToOptionsStart(builder): # -> None:
    ...

def BroadcastToOptionsEnd(builder):
    ...

class BroadcastToOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BroadcastToOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, broadcastToOptions): # -> BroadcastToOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class Rfft2dOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Rfft2dOptions:
        ...
    
    @classmethod
    def GetRootAsRfft2dOptions(cls, buf, offset=...): # -> Rfft2dOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def Rfft2dOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def Rfft2dOptionsStart(builder): # -> None:
    ...

def Rfft2dOptionsEnd(builder):
    ...

class Rfft2dOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> Rfft2dOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, rfft2dOptions): # -> Rfft2dOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class HashtableOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> HashtableOptions:
        ...
    
    @classmethod
    def GetRootAsHashtableOptions(cls, buf, offset=...): # -> HashtableOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def HashtableOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def TableId(self): # -> Literal[0]:
        ...
    
    def KeyDtype(self): # -> Literal[0]:
        ...
    
    def ValueDtype(self): # -> Literal[0]:
        ...
    


def HashtableOptionsStart(builder): # -> None:
    ...

def HashtableOptionsAddTableId(builder, tableId): # -> None:
    ...

def HashtableOptionsAddKeyDtype(builder, keyDtype): # -> None:
    ...

def HashtableOptionsAddValueDtype(builder, valueDtype): # -> None:
    ...

def HashtableOptionsEnd(builder):
    ...

class HashtableOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> HashtableOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, hashtableOptions): # -> HashtableOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class HashtableFindOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> HashtableFindOptions:
        ...
    
    @classmethod
    def GetRootAsHashtableFindOptions(cls, buf, offset=...): # -> HashtableFindOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def HashtableFindOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def HashtableFindOptionsStart(builder): # -> None:
    ...

def HashtableFindOptionsEnd(builder):
    ...

class HashtableFindOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> HashtableFindOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, hashtableFindOptions): # -> HashtableFindOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class HashtableImportOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> HashtableImportOptions:
        ...
    
    @classmethod
    def GetRootAsHashtableImportOptions(cls, buf, offset=...): # -> HashtableImportOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def HashtableImportOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def HashtableImportOptionsStart(builder): # -> None:
    ...

def HashtableImportOptionsEnd(builder):
    ...

class HashtableImportOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> HashtableImportOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, hashtableImportOptions): # -> HashtableImportOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class HashtableSizeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> HashtableSizeOptions:
        ...
    
    @classmethod
    def GetRootAsHashtableSizeOptions(cls, buf, offset=...): # -> HashtableSizeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def HashtableSizeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def HashtableSizeOptionsStart(builder): # -> None:
    ...

def HashtableSizeOptionsEnd(builder):
    ...

class HashtableSizeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> HashtableSizeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, hashtableSizeOptions): # -> HashtableSizeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class VarHandleOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> VarHandleOptions:
        ...
    
    @classmethod
    def GetRootAsVarHandleOptions(cls, buf, offset=...): # -> VarHandleOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def VarHandleOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Container(self): # -> bytes | None:
        ...
    
    def SharedName(self): # -> bytes | None:
        ...
    


def VarHandleOptionsStart(builder): # -> None:
    ...

def VarHandleOptionsAddContainer(builder, container): # -> None:
    ...

def VarHandleOptionsAddSharedName(builder, sharedName): # -> None:
    ...

def VarHandleOptionsEnd(builder):
    ...

class VarHandleOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> VarHandleOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, varHandleOptions): # -> VarHandleOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ReadVariableOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ReadVariableOptions:
        ...
    
    @classmethod
    def GetRootAsReadVariableOptions(cls, buf, offset=...): # -> ReadVariableOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ReadVariableOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ReadVariableOptionsStart(builder): # -> None:
    ...

def ReadVariableOptionsEnd(builder):
    ...

class ReadVariableOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ReadVariableOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, readVariableOptions): # -> ReadVariableOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class AssignVariableOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> AssignVariableOptions:
        ...
    
    @classmethod
    def GetRootAsAssignVariableOptions(cls, buf, offset=...): # -> AssignVariableOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def AssignVariableOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def AssignVariableOptionsStart(builder): # -> None:
    ...

def AssignVariableOptionsEnd(builder):
    ...

class AssignVariableOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> AssignVariableOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, assignVariableOptions): # -> AssignVariableOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class RandomOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> RandomOptions:
        ...
    
    @classmethod
    def GetRootAsRandomOptions(cls, buf, offset=...): # -> RandomOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def RandomOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Seed(self): # -> Literal[0]:
        ...
    
    def Seed2(self): # -> Literal[0]:
        ...
    


def RandomOptionsStart(builder): # -> None:
    ...

def RandomOptionsAddSeed(builder, seed): # -> None:
    ...

def RandomOptionsAddSeed2(builder, seed2): # -> None:
    ...

def RandomOptionsEnd(builder):
    ...

class RandomOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> RandomOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, randomOptions): # -> RandomOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class BucketizeOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> BucketizeOptions:
        ...
    
    @classmethod
    def GetRootAsBucketizeOptions(cls, buf, offset=...): # -> BucketizeOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BucketizeOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Boundaries(self, j): # -> Literal[0]:
        ...
    
    def BoundariesAsNumpy(self): # -> Literal[0]:
        ...
    
    def BoundariesLength(self): # -> Any | Literal[0]:
        ...
    
    def BoundariesIsNone(self):
        ...
    


def BucketizeOptionsStart(builder): # -> None:
    ...

def BucketizeOptionsAddBoundaries(builder, boundaries): # -> None:
    ...

def BucketizeOptionsStartBoundariesVector(builder, numElems):
    ...

def BucketizeOptionsEnd(builder):
    ...

class BucketizeOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BucketizeOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, bucketizeOptions): # -> BucketizeOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class GeluOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> GeluOptions:
        ...
    
    @classmethod
    def GetRootAsGeluOptions(cls, buf, offset=...): # -> GeluOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def GeluOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Approximate(self): # -> bool:
        ...
    


def GeluOptionsStart(builder): # -> None:
    ...

def GeluOptionsAddApproximate(builder, approximate): # -> None:
    ...

def GeluOptionsEnd(builder):
    ...

class GeluOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> GeluOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, geluOptions): # -> GeluOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class DynamicUpdateSliceOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> DynamicUpdateSliceOptions:
        ...
    
    @classmethod
    def GetRootAsDynamicUpdateSliceOptions(cls, buf, offset=...): # -> DynamicUpdateSliceOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def DynamicUpdateSliceOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def DynamicUpdateSliceOptionsStart(builder): # -> None:
    ...

def DynamicUpdateSliceOptionsEnd(builder):
    ...

class DynamicUpdateSliceOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> DynamicUpdateSliceOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, dynamicUpdateSliceOptions): # -> DynamicUpdateSliceOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UnsortedSegmentProdOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UnsortedSegmentProdOptions:
        ...
    
    @classmethod
    def GetRootAsUnsortedSegmentProdOptions(cls, buf, offset=...): # -> UnsortedSegmentProdOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UnsortedSegmentProdOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def UnsortedSegmentProdOptionsStart(builder): # -> None:
    ...

def UnsortedSegmentProdOptionsEnd(builder):
    ...

class UnsortedSegmentProdOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UnsortedSegmentProdOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, unsortedSegmentProdOptions): # -> UnsortedSegmentProdOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UnsortedSegmentMaxOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UnsortedSegmentMaxOptions:
        ...
    
    @classmethod
    def GetRootAsUnsortedSegmentMaxOptions(cls, buf, offset=...): # -> UnsortedSegmentMaxOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UnsortedSegmentMaxOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def UnsortedSegmentMaxOptionsStart(builder): # -> None:
    ...

def UnsortedSegmentMaxOptionsEnd(builder):
    ...

class UnsortedSegmentMaxOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UnsortedSegmentMaxOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, unsortedSegmentMaxOptions): # -> UnsortedSegmentMaxOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class UnsortedSegmentSumOptions:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> UnsortedSegmentSumOptions:
        ...
    
    @classmethod
    def GetRootAsUnsortedSegmentSumOptions(cls, buf, offset=...): # -> UnsortedSegmentSumOptions:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def UnsortedSegmentSumOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def UnsortedSegmentSumOptionsStart(builder): # -> None:
    ...

def UnsortedSegmentSumOptionsEnd(builder):
    ...

class UnsortedSegmentSumOptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> UnsortedSegmentSumOptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, unsortedSegmentSumOptions): # -> UnsortedSegmentSumOptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class ATan2Options:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> ATan2Options:
        ...
    
    @classmethod
    def GetRootAsATan2Options(cls, buf, offset=...): # -> ATan2Options:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ATan2OptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    


def ATan2OptionsStart(builder): # -> None:
    ...

def ATan2OptionsEnd(builder):
    ...

class ATan2OptionsT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ATan2OptionsT:
        ...
    
    @classmethod
    def InitFromObj(cls, aTan2Options): # -> ATan2OptionsT:
        ...
    
    def Pack(self, builder):
        ...
    


class OperatorCode:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> OperatorCode:
        ...
    
    @classmethod
    def GetRootAsOperatorCode(cls, buf, offset=...): # -> OperatorCode:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def OperatorCodeBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def DeprecatedBuiltinCode(self): # -> Literal[0]:
        ...
    
    def CustomCode(self): # -> bytes | None:
        ...
    
    def Version(self): # -> Literal[1]:
        ...
    
    def BuiltinCode(self): # -> Literal[0]:
        ...
    


def OperatorCodeStart(builder): # -> None:
    ...

def OperatorCodeAddDeprecatedBuiltinCode(builder, deprecatedBuiltinCode): # -> None:
    ...

def OperatorCodeAddCustomCode(builder, customCode): # -> None:
    ...

def OperatorCodeAddVersion(builder, version): # -> None:
    ...

def OperatorCodeAddBuiltinCode(builder, builtinCode): # -> None:
    ...

def OperatorCodeEnd(builder):
    ...

class OperatorCodeT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> OperatorCodeT:
        ...
    
    @classmethod
    def InitFromObj(cls, operatorCode): # -> OperatorCodeT:
        ...
    
    def Pack(self, builder):
        ...
    


class Operator:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Operator:
        ...
    
    @classmethod
    def GetRootAsOperator(cls, buf, offset=...): # -> Operator:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def OperatorBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def OpcodeIndex(self): # -> Literal[0]:
        ...
    
    def Inputs(self, j): # -> Literal[0]:
        ...
    
    def InputsAsNumpy(self): # -> Literal[0]:
        ...
    
    def InputsLength(self): # -> Any | Literal[0]:
        ...
    
    def InputsIsNone(self):
        ...
    
    def Outputs(self, j): # -> Literal[0]:
        ...
    
    def OutputsAsNumpy(self): # -> Literal[0]:
        ...
    
    def OutputsLength(self): # -> Any | Literal[0]:
        ...
    
    def OutputsIsNone(self):
        ...
    
    def BuiltinOptionsType(self): # -> Literal[0]:
        ...
    
    def BuiltinOptions(self): # -> Table | None:
        ...
    
    def CustomOptions(self, j): # -> Literal[0]:
        ...
    
    def CustomOptionsAsNumpy(self): # -> Literal[0]:
        ...
    
    def CustomOptionsLength(self): # -> Any | Literal[0]:
        ...
    
    def CustomOptionsIsNone(self):
        ...
    
    def CustomOptionsFormat(self): # -> Literal[0]:
        ...
    
    def MutatingVariableInputs(self, j): # -> Literal[0]:
        ...
    
    def MutatingVariableInputsAsNumpy(self): # -> Literal[0]:
        ...
    
    def MutatingVariableInputsLength(self): # -> Any | Literal[0]:
        ...
    
    def MutatingVariableInputsIsNone(self):
        ...
    
    def Intermediates(self, j): # -> Literal[0]:
        ...
    
    def IntermediatesAsNumpy(self): # -> Literal[0]:
        ...
    
    def IntermediatesLength(self): # -> Any | Literal[0]:
        ...
    
    def IntermediatesIsNone(self):
        ...
    


def OperatorStart(builder): # -> None:
    ...

def OperatorAddOpcodeIndex(builder, opcodeIndex): # -> None:
    ...

def OperatorAddInputs(builder, inputs): # -> None:
    ...

def OperatorStartInputsVector(builder, numElems):
    ...

def OperatorAddOutputs(builder, outputs): # -> None:
    ...

def OperatorStartOutputsVector(builder, numElems):
    ...

def OperatorAddBuiltinOptionsType(builder, builtinOptionsType): # -> None:
    ...

def OperatorAddBuiltinOptions(builder, builtinOptions): # -> None:
    ...

def OperatorAddCustomOptions(builder, customOptions): # -> None:
    ...

def OperatorStartCustomOptionsVector(builder, numElems):
    ...

def OperatorAddCustomOptionsFormat(builder, customOptionsFormat): # -> None:
    ...

def OperatorAddMutatingVariableInputs(builder, mutatingVariableInputs): # -> None:
    ...

def OperatorStartMutatingVariableInputsVector(builder, numElems):
    ...

def OperatorAddIntermediates(builder, intermediates): # -> None:
    ...

def OperatorStartIntermediatesVector(builder, numElems):
    ...

def OperatorEnd(builder):
    ...

class OperatorT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> OperatorT:
        ...
    
    @classmethod
    def InitFromObj(cls, operator): # -> OperatorT:
        ...
    
    def Pack(self, builder):
        ...
    


class SubGraph:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SubGraph:
        ...
    
    @classmethod
    def GetRootAsSubGraph(cls, buf, offset=...): # -> SubGraph:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SubGraphBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Tensors(self, j): # -> Tensor | None:
        ...
    
    def TensorsLength(self): # -> Any | Literal[0]:
        ...
    
    def TensorsIsNone(self):
        ...
    
    def Inputs(self, j): # -> Literal[0]:
        ...
    
    def InputsAsNumpy(self): # -> Literal[0]:
        ...
    
    def InputsLength(self): # -> Any | Literal[0]:
        ...
    
    def InputsIsNone(self):
        ...
    
    def Outputs(self, j): # -> Literal[0]:
        ...
    
    def OutputsAsNumpy(self): # -> Literal[0]:
        ...
    
    def OutputsLength(self): # -> Any | Literal[0]:
        ...
    
    def OutputsIsNone(self):
        ...
    
    def Operators(self, j): # -> Operator | None:
        ...
    
    def OperatorsLength(self): # -> Any | Literal[0]:
        ...
    
    def OperatorsIsNone(self):
        ...
    
    def Name(self): # -> bytes | None:
        ...
    


def SubGraphStart(builder): # -> None:
    ...

def SubGraphAddTensors(builder, tensors): # -> None:
    ...

def SubGraphStartTensorsVector(builder, numElems):
    ...

def SubGraphAddInputs(builder, inputs): # -> None:
    ...

def SubGraphStartInputsVector(builder, numElems):
    ...

def SubGraphAddOutputs(builder, outputs): # -> None:
    ...

def SubGraphStartOutputsVector(builder, numElems):
    ...

def SubGraphAddOperators(builder, operators): # -> None:
    ...

def SubGraphStartOperatorsVector(builder, numElems):
    ...

def SubGraphAddName(builder, name): # -> None:
    ...

def SubGraphEnd(builder):
    ...

class SubGraphT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SubGraphT:
        ...
    
    @classmethod
    def InitFromObj(cls, subGraph): # -> SubGraphT:
        ...
    
    def Pack(self, builder):
        ...
    


class Buffer:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Buffer:
        ...
    
    @classmethod
    def GetRootAsBuffer(cls, buf, offset=...): # -> Buffer:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def BufferBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Data(self, j): # -> Literal[0]:
        ...
    
    def DataAsNumpy(self): # -> Literal[0]:
        ...
    
    def DataLength(self): # -> Any | Literal[0]:
        ...
    
    def DataIsNone(self):
        ...
    


def BufferStart(builder): # -> None:
    ...

def BufferAddData(builder, data): # -> None:
    ...

def BufferStartDataVector(builder, numElems):
    ...

def BufferEnd(builder):
    ...

class BufferT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> BufferT:
        ...
    
    @classmethod
    def InitFromObj(cls, buffer): # -> BufferT:
        ...
    
    def Pack(self, builder):
        ...
    


class Metadata:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Metadata:
        ...
    
    @classmethod
    def GetRootAsMetadata(cls, buf, offset=...): # -> Metadata:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def MetadataBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Name(self): # -> bytes | None:
        ...
    
    def Buffer(self): # -> Literal[0]:
        ...
    


def MetadataStart(builder): # -> None:
    ...

def MetadataAddName(builder, name): # -> None:
    ...

def MetadataAddBuffer(builder, buffer): # -> None:
    ...

def MetadataEnd(builder):
    ...

class MetadataT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> MetadataT:
        ...
    
    @classmethod
    def InitFromObj(cls, metadata): # -> MetadataT:
        ...
    
    def Pack(self, builder):
        ...
    


class TensorMap:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> TensorMap:
        ...
    
    @classmethod
    def GetRootAsTensorMap(cls, buf, offset=...): # -> TensorMap:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def TensorMapBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Name(self): # -> bytes | None:
        ...
    
    def TensorIndex(self): # -> Literal[0]:
        ...
    


def TensorMapStart(builder): # -> None:
    ...

def TensorMapAddName(builder, name): # -> None:
    ...

def TensorMapAddTensorIndex(builder, tensorIndex): # -> None:
    ...

def TensorMapEnd(builder):
    ...

class TensorMapT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> TensorMapT:
        ...
    
    @classmethod
    def InitFromObj(cls, tensorMap): # -> TensorMapT:
        ...
    
    def Pack(self, builder):
        ...
    


class SignatureDef:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> SignatureDef:
        ...
    
    @classmethod
    def GetRootAsSignatureDef(cls, buf, offset=...): # -> SignatureDef:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def SignatureDefBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Inputs(self, j): # -> TensorMap | None:
        ...
    
    def InputsLength(self): # -> Any | Literal[0]:
        ...
    
    def InputsIsNone(self):
        ...
    
    def Outputs(self, j): # -> TensorMap | None:
        ...
    
    def OutputsLength(self): # -> Any | Literal[0]:
        ...
    
    def OutputsIsNone(self):
        ...
    
    def SignatureKey(self): # -> bytes | None:
        ...
    
    def SubgraphIndex(self): # -> Literal[0]:
        ...
    


def SignatureDefStart(builder): # -> None:
    ...

def SignatureDefAddInputs(builder, inputs): # -> None:
    ...

def SignatureDefStartInputsVector(builder, numElems):
    ...

def SignatureDefAddOutputs(builder, outputs): # -> None:
    ...

def SignatureDefStartOutputsVector(builder, numElems):
    ...

def SignatureDefAddSignatureKey(builder, signatureKey): # -> None:
    ...

def SignatureDefAddSubgraphIndex(builder, subgraphIndex): # -> None:
    ...

def SignatureDefEnd(builder):
    ...

class SignatureDefT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> SignatureDefT:
        ...
    
    @classmethod
    def InitFromObj(cls, signatureDef): # -> SignatureDefT:
        ...
    
    def Pack(self, builder):
        ...
    


class Model:
    __slots__ = ...
    @classmethod
    def GetRootAs(cls, buf, offset=...): # -> Model:
        ...
    
    @classmethod
    def GetRootAsModel(cls, buf, offset=...): # -> Model:
        """This method is deprecated. Please switch to GetRootAs."""
        ...
    
    @classmethod
    def ModelBufferHasIdentifier(cls, buf, offset, size_prefixed=...):
        ...
    
    def Init(self, buf, pos): # -> None:
        ...
    
    def Version(self): # -> Literal[0]:
        ...
    
    def OperatorCodes(self, j): # -> OperatorCode | None:
        ...
    
    def OperatorCodesLength(self): # -> Any | Literal[0]:
        ...
    
    def OperatorCodesIsNone(self):
        ...
    
    def Subgraphs(self, j): # -> SubGraph | None:
        ...
    
    def SubgraphsLength(self): # -> Any | Literal[0]:
        ...
    
    def SubgraphsIsNone(self):
        ...
    
    def Description(self): # -> bytes | None:
        ...
    
    def Buffers(self, j): # -> Buffer | None:
        ...
    
    def BuffersLength(self): # -> Any | Literal[0]:
        ...
    
    def BuffersIsNone(self):
        ...
    
    def MetadataBuffer(self, j): # -> Literal[0]:
        ...
    
    def MetadataBufferAsNumpy(self): # -> Literal[0]:
        ...
    
    def MetadataBufferLength(self): # -> Any | Literal[0]:
        ...
    
    def MetadataBufferIsNone(self):
        ...
    
    def Metadata(self, j): # -> Metadata | None:
        ...
    
    def MetadataLength(self): # -> Any | Literal[0]:
        ...
    
    def MetadataIsNone(self):
        ...
    
    def SignatureDefs(self, j): # -> SignatureDef | None:
        ...
    
    def SignatureDefsLength(self): # -> Any | Literal[0]:
        ...
    
    def SignatureDefsIsNone(self):
        ...
    


def ModelStart(builder): # -> None:
    ...

def ModelAddVersion(builder, version): # -> None:
    ...

def ModelAddOperatorCodes(builder, operatorCodes): # -> None:
    ...

def ModelStartOperatorCodesVector(builder, numElems):
    ...

def ModelAddSubgraphs(builder, subgraphs): # -> None:
    ...

def ModelStartSubgraphsVector(builder, numElems):
    ...

def ModelAddDescription(builder, description): # -> None:
    ...

def ModelAddBuffers(builder, buffers): # -> None:
    ...

def ModelStartBuffersVector(builder, numElems):
    ...

def ModelAddMetadataBuffer(builder, metadataBuffer): # -> None:
    ...

def ModelStartMetadataBufferVector(builder, numElems):
    ...

def ModelAddMetadata(builder, metadata): # -> None:
    ...

def ModelStartMetadataVector(builder, numElems):
    ...

def ModelAddSignatureDefs(builder, signatureDefs): # -> None:
    ...

def ModelStartSignatureDefsVector(builder, numElems):
    ...

def ModelEnd(builder):
    ...

class ModelT:
    def __init__(self) -> None:
        ...
    
    @classmethod
    def InitFromBuf(cls, buf, pos): # -> ModelT:
        ...
    
    @classmethod
    def InitFromObj(cls, model): # -> ModelT:
        ...
    
    def Pack(self, builder):
        ...
    


