"""
This type stub file was generated by pyright.
"""

class _IDCounter:
    """Generate sequential ids with a prefix."""
    def __init__(self, prefix) -> None:
        ...
    
    def get_id(self): # -> str:
        ...
    


_CONTAINER_ID_COUNTER = ...
_ESTIMATOR_ID_COUNTER = ...
class _VisualBlock:
    """HTML Representation of Estimator

    Parameters
    ----------
    kind : {'serial', 'parallel', 'single'}
        kind of HTML block

    estimators : list of estimators or `_VisualBlock`s or a single estimator
        If kind != 'single', then `estimators` is a list of
        estimators.
        If kind == 'single', then `estimators` is a single estimator.

    names : list of str, default=None
        If kind != 'single', then `names` corresponds to estimators.
        If kind == 'single', then `names` is a single string corresponding to
        the single estimator.

    name_details : list of str, str, or None, default=None
        If kind != 'single', then `name_details` corresponds to `names`.
        If kind == 'single', then `name_details` is a single string
        corresponding to the single estimator.

    dash_wrapped : bool, default=True
        If true, wrapped HTML element will be wrapped with a dashed border.
        Only active when kind != 'single'.
    """
    def __init__(self, kind, estimators, *, names=..., name_details=..., dash_wrapped=...) -> None:
        ...
    


_STYLE = ...
def estimator_html_repr(estimator): # -> str:
    """Build a HTML representation of an estimator.

    Read more in the :ref:`User Guide <visualizing_composite_estimators>`.

    Parameters
    ----------
    estimator : estimator object
        The estimator to visualize.

    Returns
    -------
    html: str
        HTML representation of estimator.
    """
    ...

