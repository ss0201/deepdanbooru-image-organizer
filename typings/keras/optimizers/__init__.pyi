"""
This type stub file was generated by pyright.
"""

import tensorflow.compat.v2 as tf
from keras import backend
from keras.optimizers.legacy import adadelta as adadelta_legacy, adagrad as adagrad_legacy, adam as adam_legacy, adamax as adamax_legacy, ftrl as ftrl_legacy, nadam as nadam_legacy, optimizer as optimizer_legacy, rmsprop as rmsprop_legacy, sgd as sgd_legacy
from keras.optimizers.optimizer_experimental import adadelta as adadelta_experimental, adagrad as adagrad_experimental, adam as adam_experimental, adamax as adamax_experimental, adamw as adamw_experimental, ftrl as ftrl_experimental, nadam as nadam_experimental, optimizer as optimizer_experimental, rmsprop as rmsprop_experimental, sgd as sgd_experimental
from keras.optimizers.optimizer_v1 import Optimizer, TFOptimizer
from keras.optimizers.optimizer_v2 import adadelta as adadelta_v2, adagrad as adagrad_v2, adam as adam_v2, adamax as adamax_v2, ftrl, gradient_descent as gradient_descent_v2, nadam as nadam_v2, optimizer_v2 as base_optimizer_v2, rmsprop as rmsprop_v2
from keras.optimizers.optimizer_v2.adadelta import Adadelta
from keras.optimizers.optimizer_v2.adagrad import Adagrad
from keras.optimizers.optimizer_v2.adam import Adam
from keras.optimizers.optimizer_v2.adamax import Adamax
from keras.optimizers.optimizer_v2.ftrl import Ftrl
from keras.optimizers.optimizer_v2.gradient_descent import SGD
from keras.optimizers.optimizer_v2.nadam import Nadam
from keras.optimizers.optimizer_v2.rmsprop import RMSprop
from keras.utils.generic_utils import deserialize_keras_object, serialize_keras_object
from tensorflow.python.util.tf_export import keras_export

"""Built-in optimizer classes.

For more examples see the base class `tf.keras.optimizers.Optimizer`.
"""
@keras_export("keras.optimizers.serialize")
def serialize(optimizer): # -> Any | dict[str, Unknown] | None:
    """Serialize the optimizer configuration to JSON compatible python dict.

    The configuration can be used for persistence and reconstruct the
    `Optimizer` instance again.

    >>> tf.keras.optimizers.serialize(tf.keras.optimizers.SGD())
    {'class_name': 'SGD', 'config': {'name': 'SGD', 'learning_rate': 0.01,
                                     'decay': 0.0, 'momentum': 0.0,
                                     'nesterov': False}}

    Args:
      optimizer: An `Optimizer` instance to serialize.

    Returns:
      Python dict which contains the configuration of the input optimizer.
    """
    ...

@keras_export("keras.optimizers.deserialize")
def deserialize(config, custom_objects=..., **kwargs): # -> Any | None:
    """Inverse of the `serialize` function.

    Args:
        config: Optimizer configuration dictionary.
        custom_objects: Optional dictionary mapping names (strings) to custom
          objects (classes and functions) to be considered during
          deserialization.

    Returns:
        A Keras Optimizer instance.
    """
    ...

@keras_export("keras.optimizers.get")
def get(identifier, **kwargs): # -> Optimizer | OptimizerV2 | TFOptimizer | Any | None:
    """Retrieves a Keras Optimizer instance.

    Args:
        identifier: Optimizer identifier, one of
            - String: name of an optimizer
            - Dictionary: configuration dictionary.
            - Keras Optimizer instance (it will be returned unchanged).
            - TensorFlow Optimizer instance (it will be wrapped as a Keras
              Optimizer).

    Returns:
        A Keras Optimizer instance.

    Raises:
        ValueError: If `identifier` cannot be interpreted.
    """
    ...

